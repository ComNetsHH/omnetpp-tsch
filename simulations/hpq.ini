[General]
num-rngs = 3
check-signals = false # remove this and change modules accordingly
*.cmdenv-log-level=detail
**.result-recording-modes=default,-histogram
**.mobility.rng-0 = 1
**.wlan[*].mac.rng-0 = 2

include common.ini

[Config _HPQ_Validation_Base]
network = Generic
result-dir = HPQ_Validation
repeat = 100
sim-time-limit = ${simTimeLimit = 600s}
#warmup-period = ${warmup = 200s}

*.numSinks = 1
*.numHosts = 1

*.sink[0].mobility.typename = "StationaryMobility"
*.sink[0].mobility.initialX = 10m
*.sink[0].mobility.initialY = 10m

*.host[0].mobility.typename = "StationaryMobility"
*.host[0].mobility.initialX = 14m
*.host[0].mobility.initialY = 10m

**.ipv6.neighbourDiscovery.raEnabled = false
**.ipv6.neighbourDiscovery.skipDad = true
**.ipv6.neighbourDiscovery.addRandomDelays = false

**.rpl.daoEnabled = false

**.numApps = 3

*.sink[*].app[*].typename = "UdpSink"
*.sink[*].app[*].localPort = 1000 + index()
#*.sink[*].app[*].startTime = ${startTime = $warmup - 100s}
*.sink[*].app[*].startTime = ${startTime = 100s}

**.sf.upperCellUsageLimit = 1.1
**.sf.lowerCellUsageLimit = -1
**.sf.housekeepingStart = 1000s
**.mac.ignoreBitErrors = true
**.mac.macMaxFrameRetries = 0

*.host[*].app[*].typename = "TschUdpBasicApp"
*.host[*].app[*].destPort = 1000 + index()
*.host[*].app[*].messageLength = 50B

*.host[*].app[0].virtualLinkId = -1 # high prio (SP)
*.host[*].app[1].virtualLinkId = 0 # normal prio (NP)
*.host[*].app[2].virtualLinkId = 1 # low prio (BE)

#*.host[*].app[1].startTime = uniform(${startTime}, ${startTime} + 10s)
*.host[*].app[1].startTime = ${startTime}

*.host[*].app[*].startTime = ${simTimeLimit}
*.host[*].app[*].sendInterval = ${simTimeLimit}

**.queueLength = 9999

[Config _VaryingServiceRate]
**.sf.initialNumCells = ${m=1..5}

[Config _Sr2]
**.sf.initialNumCells = 2

[Config _LowTrafficRate]
*.host[*].app[*].sendInterval = exponential(1.01/${l = 0.1..0.9 step 0.1}) * 1s

[Config _HighTrafficRate]
*.host[*].app[*].sendInterval = exponential(1.01/${l = 1..5}) * 1s

[Config SimpleMd1]
extends = _HPQ_Validation_Base
result-dir = SimpleMd1

[Config SimpleMd1_Sr2]
extends = SimpleMd1, _Sr2
result-dir = SimpleMd1_Sr2

[Config SimpleDd1]
extends = _HPQ_Validation_Base
result-dir = SimpleDd1
*.host[*].app[1].sendInterval = 1.01s/${l=0.1..0.5 step 0.1}

[Config Dd1VaryingServiceRate]
extends = SimpleDd1, _VaryingServiceRate
result-dir = Dd1VaryingServiceRate

[Config Md1VaryingServiceRate]
extends = SimpleMd1, _VaryingServiceRate
result-dir = Md1VaryingServiceRate

*.host[0].app[1].sendInterval = exponential(1.01/${l = 0.1..0.9 step 0.1}) * 1s

[Config Md1Saturated]
extends = _HPQ_Validation_Base
result-dir = Md1Saturated
**.sf.initialNumCells = ${l} + 1
*.host[*].app[*].sendInterval = exponential(1.01/${l = 1..5}) * 1s

[Config SimpleDd1_Sr2]
extends = SimpleDd1, _Sr2
result-dir = SimpleDd1_Sr2

[Config SpNpVariableServiceRates]
extends = _HPQ_Validation_Base, _VaryingServiceRate
result-dir = SpNpVariableServiceRates

*.host[*].app[*].sendInterval = exponential(1.01s/${l = 0.1..0.9 step 0.1})
*.host[*].app[0].startTime = uniform(${startTime}, ${startTime} + 10s) # SP

[Config Wrr]
extends = _HPQ_Validation_Base
result-dir = Wrr

#*.host[*].app[2].startTime = uniform(${startTime}, ${startTime} + 10s) # BE
*.host[*].app[2].startTime = ${startTime} # BE
**.mac.wrrEnabled = true
**.mac.wrrWeigthBe = ${wbe = 1..3}
**.mac.wrrWeigthNp = ${wnp = 4}

*.host[*].app[1].sendInterval = exponential((${wbe}+${wnp})/${wnp}) * 1s
*.host[*].app[*].sendInterval = exponential(1.01s/${l = 0.1..0.3 step 0.05})

#*.host[*].app[1].stopTime = ${simTimeLimit} - 100s
#*.host[*].app[2].stopTime = ${simTimeLimit} - 100s

 
[Config HPQ]
network = HighDensity
repeat = 15
sim-time-limit = 500s
warmup-period = 200s
**.queueUtilization.result-recording-modes = vector, mean
result-dir = HPQ_On

include waic_radio.ini
#**.radio.receiver.typename = "Ieee802154NarrowbandDimensionalReceiverWaic"
#**.radio.transmitter.power = 0.00001mW

**.daoEnabled = false
**.minHopRankIncrease = 1

*.numHosts = ${numHosts = 50, 200}
*.numSinks = 1

**.queueLength = 20

# MSF params
**.sf.numMinCells = 20
**.sf.maxNumCells = intuniform(10, 15)
**.sf.showTxCellCount = true
**.sf.showQueueUtilization = false
**.sf.send6pDelayed = false
**.sf.showDedicatedTxCells = false
**.sf.upperCellUsageLimit = 0.95 # add cells only when utilization is really high
**.sf.lowerCellUsageLimit = -1 # do not remove cells
**.sf.deleteOverlappingMinCells = false # keep minimal cells even if they overlap with auto cell

# Topology (aircraft seats imitation)
include seatbelts_layout.ini

## Apps
**.numApps = 3

*.sink[*].app[*].typename = "UdpSink"
*.sink[*].app[*].localPort = 1000 + index()
*.sink[*].app[*].startTime = ${startTime = 100}s

*.host[*].app[*].typename = "TschUdpBasicApp"
*.host[*].app[*].destPort = 1000 + index()
*.host[*].app[*].destAddresses = "sink[0](ipv6)"
*.host[*].app[*].messageLength = 50B

# Seatbelt status
*.host[*].app[0].sendInterval = exponential(5s)
*.host[*].app[0].VirtualLinkID = 1 # low prio
*.host[*].app[0].startTime = ${hostStartTime = uniform($startTime, $startTime + 10)} * 1s

# Smoke
*.host[*].app[1].sendInterval = 2s # was exp(3s)
*.host[*].app[1].VirtualLinkID = -1 # highest prio

# only these nodes have smoke sensors active
*.host[7].app[1].startTime = ${smokeStart = $hostStartTime * 2.5s}
*.host[13].app[1].startTime = ${smokeStart}
*.host[19].app[1].startTime = ${smokeStart}
*.host[31].app[1].startTime = ${smokeStart}
*.host[37].app[1].startTime = ${smokeStart}
*.host[43].app[1].startTime = ${smokeStart}
*.host[*].app[1].stopTime = this.startTime + 120s # let bursty smoke traffic run for X min

# Humidity
*.host[*].app[2].sendInterval = 2.5s
*.host[*].app[2].VirtualLinkID = 0 # normal prio

# only these nodes have humidity monitoring active
*.host[13].app[2].startTime = ${startTime}s
*.host[37].app[2].startTime = ${startTime}s
*.host[19].app[2].startTime = ${startTime}s
*.host[43].app[2].startTime = ${startTime}s
*.host[7].app[2].startTime = ${startTime}s
*.host[31].app[2].startTime = ${startTime}s
*.host[1].app[2].startTime = ${startTime}s
*.host[25].app[2].startTime = ${startTime}s

# disable smoke and humidity sensors on all other nodes
*.host[*].app[1].startTime = 20h 
*.host[*].app[2].startTime = 20h

[Config HPQ_Off]
extends = HPQ
result-dir = HPQ_Off
#**.queueLength = ${queueLen} * 3  # because each priority has its own queue and now they're combined
*.host[*].app[0].VirtualLinkID = 0
*.host[*].app[1].VirtualLinkID = 0
*.host[*].app[2].VirtualLinkID = 0