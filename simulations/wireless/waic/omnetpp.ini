[General]
num-rngs = 10
check-signals = false # remove this and change modules accordingly
*.cmdenv-log-level=detail
**.result-recording-modes=default,-histogram
**.mobility.rng-0 = 1
**.wlan[*].mac.rng-0 = 7
**.param-record-as-scalar = false

include common.ini
include delay_testing.ini
#include avionic.ini

**.sf.timeout = 35000ms
**.macMaxBE = 5 # maximum backoff exponent should correspond to the SF timeout value

[Config Housekeeping_Test]
network = Generic
warmup-period = 50s

*.numHosts = 4
*.numSinks = 1

*.sink[*].mobility.typename = "StationaryMobility"
*.host[*].mobility.typename = "StationaryMobility"

*.sink[0].mobility.initialX = 10m
*.sink[0].mobility.initialY = 20m

*.host[0].mobility.initialX = 20m
*.host[0].mobility.initialY = 10m
*.host[1].mobility.initialX = 30m
*.host[1].mobility.initialY = 15m

*.host[2].mobility.initialX = 20m
*.host[2].mobility.initialY = 30m
*.host[3].mobility.initialX = 30m
*.host[3].mobility.initialY = 20m

**.sf.lowerCellUsageLimit = -1
**.sf.upperCellUsageLimit = 1.1

*.host[1].**.sf.initCellOverride = "15 12"
*.host[3].**.sf.initCellOverride = "15 12"
*.host[1].**.showNumPktSent = true
*.host[3].**.showNumPktSent = true

*.host[1].**.relocatePdrThresh = 0.9

**.sf.disableHousekeeping = false

*.sink[0].numApps = 1
*.host[1].numApps = 1
*.host[3].numApps = 1

**.app[*].startTime = 120s
**.app[*].stopTime = 1000s
**.app[*].packetSize = 50B
*.host[1].app[*].sendInterval = 2s
*.host[3].app[*].sendInterval = 4s
**.queueLength = 1


*.sink[0].app[0].typename = "UdpSink"
*.host[*].app[0].typename = "UdpBasicApp"
*.sink[0].app[0].localPort = 1001
*.host[*].app[0].destPort = 1001

**.channelHopping.pattern = "12"
**.channelHopping.useRandomPattern = false

**.ipv6.neighbourDiscovery.raEnabled = false
**.ipv6.neighbourDiscovery.skipDad = true


[Config HPQ]
network = HighDensity
repeat = 35
sim-time-limit = ${simLimit=800s}
warmup-period = ${warmup=500s}

*.numHosts = ${hosts = 50, 200}
*.numSinks = ${sinks = 1..5}

result-dir = HPQ 
output-vector-file = "${resultdir}/${configname}-hosts=${hosts}-sinks=${sinks}-${runnumber}.vec"
output-scalar-file = "${resultdir}/${configname}-hosts=${hosts}-sinks=${sinks}-${runnumber}.sca"

eventlog-file = "${resultdir}/${configname}-hosts=${hosts}-sinks=${sinks}#${repetition}.elog"
snapshot-file = "${resultdir}/${configname}-hosts=${hosts}-sinks=${sinks}#${repetition}.sna"
cmdenv-output-file = "${resultdir}/${configname}-hosts=${hosts}-sinks=${sinks}#${repetition}.out"
measurement-label = hosts=${hosts}-sinks=${sinks}

#**.app**.statistic-recording = true
#**.statistic-recording = false

**.radioModeFilter = true
**.listeningFilter = true
**.macAddressFilter = true

#**.radio.transmitter.power = 0.000073mW 

include waic_radio.ini

**.wrrEnabled = true
**.daoEnabled = false

**.rpl.minHopRankIncrease = 2 # speed up topology convergence

# disable Ipv6 clutter
**.ipv6.neighbourDiscovery.raEnabled = false
**.ipv6.neighbourDiscovery.skipDad = true
**.ipv6.neighbourDiscovery.addRandomDelays = true

# Ensure reliable and robust connectivity
**.channelHopping.useRandomPattern = true
**.sf.minCellChannelOffset = 39 # highest frequency for DIOs ensures reliable parent selection
**.sf.checkScheduleConsistency = false # to speed up the simulation a bit

# MSF params	
**.sf.numMinCells = 10
**.sf.maxNumCells = 100 # intuniform(10, 15)
**.sf.upperCellUsageLimit = 0.75
**.sf.lowerCellUsageLimit = 0.25
**.sf.disableHousekeeping = true
**.sf.showTxCellCount = true
**.sf.timeout = 60000ms
**.sf.maxNumCellsScalingFactor = 4 # recommended by RFC 9033
**.sf.allowAutoCellDeletion = false # to free up the schedule around sink by deleting redundant neighbors' auto cells 

include seatbelts_layout.ini

**.mobility.rotateHorizontally = false

## Apps
**.numApps = 3

*.sink[*].app[*].typename = "UdpSink"
*.sink[*].app[*].localPort = 1000 + index()
*.sink[*].app[*].startTime = ${startTime = 100}s 

*.host[*].app[*].typename = "TschUdpBasicApp"
*.host[*].app[*].destPort = 1000 + index()
*.host[*].app[*].messageLength = 50B

# Seatbelt status
*.host[*].app[0].virtualLinkId = 0 # normal prio
*.host[*].app[0].packetName = "SeatbeltApp"
*.host[*].app[0].startTime = uniform(${startTime}, ${startTime} + 10) * 1s
 
# Smoke
*.host[*].app[1].virtualLinkId = -1 # high prio
*.host[*].app[1].sendInterval = 2s
*.host[*].app[1].stopTime = this.startTime + this.sendInterval # one smoke alarm event per simulation 
*.host[*].app[1].packetName = "SmokeAlarmApp"

# Humidity
*.host[*].app[2].virtualLinkId = 1 # low prio
*.host[*].app[2].packetName = "HumidityApp"

# uncomment depending on the $numNodes param
#include hpq_50.ini
include hpq_200.ini

# disable smoke and humidity sensors on all other nodes
*.host[*].app[1].startTime = 20h
*.host[*].app[2].startTime = 20h


[Config HPQ_Off]
extends = HPQ
*.host[*].app[0].virtualLinkId = 0
*.host[*].app[1].virtualLinkId = 0
*.host[*].app[2].virtualLinkId = 0 

[Config _HPQ_Model_Verification]
network = HighDensity
warmup-period = 200s
sim-time-limit = ${simLimit = 2000s}
repeat = 50

**.sf.upperCellUsageLimit = 1.1
**.sf.lowerCellUsageLimit = -1

**.app[*].startTime = uniform(20s, 22s)
**.numApps = 3
*.sink[*].app[*].typename = "UdpSink"
*.sink[*].app[*].localPort = 1000 + index()

*.host[*].app[*].destPort = 1000 + index()
*.host[*].app[*].typename = "TschUdpBasicApp"
*.host[*].app[*].messageLength = 50B

*.host[*].app[0].virtualLinkId = -1
*.host[*].app[1].virtualLinkId = 0
*.host[*].app[2].virtualLinkId = 1

**.sf.disableHousekeeping = true
**.queueLength = 20000
**.wrrEnabled = true
**.daoEnabled = false
**.macMaxFrameRetries = 0

*.sink[0].mobility.initialX = 3m
*.sink[0].mobility.initialY = 3m
*.host[0].mobility.initialX = 4m
*.host[0].mobility.initialY = 3m
**.constraintAreaMaxX = 10m
**.constraintAreaMaxY = 10m

[Config HPQ_Model_Verification_All_Queues]
extends = _HPQ_Model_Verification
result-dir = hpq_verif
*.host[*].app[*].sendInterval = exponential(1 / ${rate = 0.05..0.3 step 0.05} * 1s)

[Config HPQ_Model_Verification_2_Queues]
extends = HPQ_Model_Verification_All_Queues
result-dir = hpq_verif_2_queues
**.app[2].startTime = 20h

[Config HPQ_Model_Verification_WRR_Effect]
extends = _HPQ_Model_Verification
result-dir = hpq_verif_wrr_effect
**.wrrWeigthBe = ${wrrBe = 1..3 step 1}
**.wrrWeigthNp = ${wrrNp = 4}

**.host[*].app[1].stopTime = ${simLimit} - 50s
**.host[*].app[2].stopTime = ${simLimit} - 50s

**.app[0].startTime = 20h
**.app[0].sendInterval = 20h
**.app[1].sendInterval = exponential((${wrrNp} + ${wrrBe})/${wrrNp} * 1s) # 4 - weight of NP traffic
**.app[2].sendInterval = exponential(1 / ${rateBe = 0.05..0.5 step 0.05} * 1s)

[Config HPQ_Model_Verification_WRR_NP_effect]
extends = _HPQ_Model_Verification
result-dir = hpq_verif_wrr_np_effect
**.app[0].startTime = 20h
**.app[0].sendInterval = 20h
**.app[1].sendInterval = exponential(1 / ${rateNp = 0.2, 0.4, 0.6} * 1s)
**.app[2].sendInterval = exponential(1 / ${rateBe = 0.05..0.4 step 0.05} * 1s)

[Config _ReSA_base]
network = ReSA
repeat = 40
sim-time-limit = ${simtime = 2000}s
warmup-period = ${warmup = 1000}s

**.numDaoRetransmitAttempts = 20 # crucial to ensure that a sink can route packets downwards
**.ipv6.neighbourDiscovery.raEnabled = false
**.ipv6.neighbourDiscovery.skipDad = true
**.ipv6.neighbourDiscovery.addRandomDelays = true

**.sf.timeout = 60000ms # tricky, should be best set dynamically

# To disable channel hopping
#**.channelHopping.pattern = "1"
#**.channelHopping.useRandomPattern = false

#**.channelHopping.blacklistedChannels = "11 12 13 17 18"

**.channelHopping.useRandomPattern = true

#**.mac.ignoreBitErrors = false # TODO: causes more problems than it solves
#**.sf.downlinkDedicated = true

**.gw*.rpl.startDelay = 10
**.nsForwardingDelay = 1s # solves extreme congestion during IPv6 neighbour discovery  

# no need for DAOs except from the destinations we're routing to - analytic modules
# AND the sources of important data - smoke alarms
*.am*[*].rpl.daoEnabled = true
#*.sos*[*].rpl.daoEnabled = true

# force nodes to continuously retry uplink cell scheduling
#**sos**.sf.scheduleUplinkManually = true

**.daoEnabled = false

*.sos*[*].app[0].startTime = uniform(${warmup}s + 200s, ${simtime}s - 100s) # was -500s
*.sos*[*].app[0].sendInterval = ${simtime}s

**.app[*].startTime = uniform(${warmup} - 1, ${warmup}) * 1s

*.sos*[*].app[0].startTime.param-record-as-scalar = true

# comment these out if more in-depth analysis is required
#**.am**.app**.endToEndDelay:vector.vector-recording = true
#**.gw**.app[0].endToEndDelay:vector.vector-recording = true
#**.gw**.app[*].**.vector-recording = false
##**.result-recording-modes= -
#**.vector-recording = false
#**.scalar-recording = false
#**.bin-recording = false

[Config ReSA_ISM]
extends = _ReSA_base
result-dir = ReSA
**.vector-recording = true
**.app**.result-recording-modes= default
**.mac**.result-recording-modes= default
**.result-recording-modes= -

include ReSA.ini

[Config ReSA]
extends = ReSA_ISM
include waic_radio.ini
**.sf.minCellChannelOffset = 39 # highest frequency for DIOs ensures reliable parent selection

[Config ReSA_Downlink_Optimization]
extends = ReSA
#**.sf.lowerCellUsageLimit = -1 # avoid removing specially provisioned downlink cells
**am**.rpl.downlinkRequired = true

[Config ReSA_Cell_Bundling]
extends = ReSA_Altimeter
**.sf.cellBundlingEnabled = true
**.sf.lowerCellUsageLimit = -1 # avoid removing bundling cell pairs

[Config ReSA_Cell_Bundling_Dynamic]
extends = ReSA_Altimeter
**.sos*.rpl.uplinkRequired = true
**.sos*.rpl.daoEnabled = true
**.sos*.**.sf.cellBundlingEnabled = true
**.sos*.**.sf.lowerCellUsageLimit = -1

**.sf.handleCellBundlingSignal = true

[Config ReSA_Cell_Bundling_Dynamic_Downlink]
extends = ReSA_Cell_Bundling_Dynamic
**am**.rpl.downlinkRequired = true

[Config ReSA_Cell_Bundling_Ultimate]
extends = ReSA_Cell_Bundling_Dynamic_Downlink
*.gw*[*].app[0].virtualLinkId = -2
*.sos*[*].app[0].virtualLinkId = -2
result-dir = ReSA_WAIC_Ultimate

[Config ReSA_Ultimate_ISM]
extends = ReSA_HPQ
**sos**.sf.scheduleUplinkManually = true
**.sos*.rpl.daoEnabled = true
#**.sos*.**.sf.cellBundlingEnabled = true
#**.sf.cellBundleSize = 1
#**.sf.handleCellBundlingSignal = true

[Config ReSA_Cell_Bundling_Dynamic_Daisy_Chained]
extends = ReSA_Cell_Bundling_Dynamic, ReSA_Low_Latency

[Config ReSA_Cell_Bundling_Dynamic_Daisy_Chained_Uplink]
extends = ReSA_Altimeter_Uplink
**.sos*.rpl.uplinkRequired = true
**.sos*.**.sf.cellBundlingEnabled = true
**.sf.handleCellBundlingSignal = true
**.lowLatencyMode = true

[Config ReSA_Altimeter_Low_Latency_Uplink]
extends = ReSA_Altimeter_Uplink
**.lowLatencyMode = true

[Config ReSA_Cell_Bundling_Uplink]
extends = ReSA_Altimeter_Uplink
**.sf.cellBundlingEnabled = true
**.sf.lowerCellUsageLimit = -1 # avoid removing bundling cell pairs

[Config ReSA_Cell_Bundling_Dynamic_Uplink]
extends = ReSA_Altimeter_Uplink
result-dir = ReSA_Cell_Bundling_Dynamic_Uplink
**.sos*.rpl.uplinkRequired = true
**.sos*.**.sf.cellBundlingEnabled = true
**.sf.handleCellBundlingSignal = true

[Config ReSA_Cell_Bundling-2]
extends = ReSA_Altimeter_Uplink_2

[Config ReSA_CSMA]
extends = ReSA
**.wlan[*].typename = "Ieee802154NarrowbandInterface"
**.wlan[*].mac.typename = "Ieee802154NarrowbandMac"
**.radioMedium.typename = "Ieee802154NarrowbandDimensionalRadioMedium"

[Config ReSA_CSMA_ISM]
extends = ReSA_ISM
**.wlan[*].typename = "Ieee802154NarrowbandInterface"
**.wlan[*].mac.typename = "Ieee802154NarrowbandMac"
**.radioMedium.typename = "Ieee802154NarrowbandDimensionalRadioMedium" 

[Config ReSA_CSMA_Altimeter]
result-dir = ReSA_Altimeter
## This config requires modified INET radio and 802154Mac files to run properly, 
## but it's not clear, whether CSMA behavior is affected 
extends = ReSA_CSMA, ReSA_Altimeter

[Config ReSA-CLX]
extends = ReSA
result-dir=ReSA-CLX
**.sf.typename = "TschCLSF"
**.rpl.crossLayerEnabled = true
**.rpl.clPhase2Timeout = ${warmup} - 200

**.rpl.sinkNeighborWeight = 1.5

[Config ReSA_HPQ]
extends = ReSA
*.gw*[*].app[0].virtualLinkId = -2
*.sos*[*].app[0].virtualLinkId = -2

[Config ReSA_Low_Latency]
extends = ReSA
**.lowLatencyMode = true

[Config ReSA_Low_Latency_Downlink_Optimization]
extends = ReSA_Downlink_Optimization, ReSA_Low_Latency

[Config ReSA_Ultimate]
extends = ReSA_Downlink_Optimization, ReSA_Low_Latency, ReSA_HPQ

[Config ReSA_Ultimate_Dynamic_Cell_Bundling]
result-dir = ReSA_Ultimate_Dynamic_Cell_Bundling
extends = ReSA_Downlink_Optimization, ReSA_Low_Latency, ReSA_HPQ, ReSA_Cell_Bundling_Dynamic

[Config ReSA_Ultimate_Dynamic_Cell_Bundling_2]
extends = ReSA_Ultimate_Dynamic_Cell_Bundling
**.macSlotframeSize = 53

[Config ReSA_Ultimate_Dynamic_Cell_Bundling_2_2]
extends = ReSA_Ultimate_Dynamic_Cell_Bundling
**.macSlotframeSize = 51
**.cellBundleSize = 3

[Config ReSA_Ult_53]
extends = ReSA_Ultimate_Dynamic_Cell_Bundling
**.macSlotframeSize = 53
**.numMinCells = 2
**.checkScheduleConsistency = false

# prevent nodes from immediately scheduling dedicated cell - 
# only those transmitting data will attempt it and since DAOs are disabled 
# everywhere except for smoke alarms and analytic modules, both of the latter
# will be able to schedule necessary cells (also redundant) in advance, with less contention  
**.scheduleUplinkOnJoin = false

[Config ReSA_Ult_43]
extends = ReSA_Ult_53
**.macSlotframeSize = 43

[Config ReSA_Ult_43_100Hz]
extends = ReSA_Ult_43
**.T_chirp = 0.01

[Config ReSA_Ult_53_100Hz]
extends = ReSA_Ult_53
**.T_chirp = 0.01

[Config ReSA_Ultimate_Dynamic_Cell_Bundling_2_3]
extends = ReSA_Ultimate_Dynamic_Cell_Bundling
**.macSlotframeSize = 43

[Config ReSA_Ultimate_Dynamic_Cell_Bundling_2_4]
extends = ReSA_Ultimate_Dynamic_Cell_Bundling
**.macSlotframeSize = 73
**.cellBundleSize = 3

[Config ReSA_Ultimate_Cell_Bundling]
extends = ReSA_Cell_Bundling, ReSA_Downlink_Optimization, ReSA_HPQ

[Config ReSA_Low_Latency-HPQ]
extends = ReSA_Low_Latency, ReSA_HPQ

## EXTRA PARAMS ONLY FOR ISM BAND
#**.lowLatencyStartingOffset = 10
#**sos**.sf.scheduleUplinkManually = true # to ensure dedicated cell
#**sos**.sf.blacklistSlots = true # to avoid blind guessing of available slot offsets at the parent

[Config ReSA_Uplink]
extends = ReSA
result-dir= ReSA_Uplink

*.gw*[*].app[0].typename = "UdpSink"
*.sos*[*].app[0].typename = "TschUdpBasicApp"

[Config ReSA_Uplink-HPQ]
extends = ReSA_Uplink, ReSA_HPQ

[Config ReSA_Uplink-HPQ-Low-Latency]
extends = ReSA_Uplink, ReSA_HPQ
**.lowLatencyMode = true

[Config ReSA_Uplink-CLX]
extends = ReSA_Uplink, ReSA-CLX

[Config ReSA-No-Random-Delays]
extends = ReSA_HPQ
result-dir = ReSA-No-Random-Delays

**.nsForwardingDelay = 0
**.ipv6.neighbourDiscovery.addRandomDelays = false

[Config ReSA-No-Random-Delays-CLX]
extends = ReSA-CLX

result-dir = ReSA-No-Random-Delays

**.nsForwardingDelay = 0
**.ipv6.neighbourDiscovery.addRandomDelays = false

*.gw*[*].app[0].virtualLinkId = -2
*.sos*[*].app[0].virtualLinkId = -2

[Config ReSA_Seatbelts]
extends = ReSA
result-dir = ReSA_Seatbelts

**.numHosts = ${hosts = 100} # number of seatbelts, should always come before seatbelts_layout.ini
**.numSinks = ${sinks = 1} # dummy variable required for compatibility with how HPQ uses seat belt layout

output-vector-file = "${resultdir}/${configname}-hosts=${hosts}-sinks=${sinks}-${runnumber}.vec"
output-scalar-file = "${resultdir}/${configname}-hosts=${hosts}-sinks=${sinks}-${runnumber}.sca"
eventlog-file = "${resultdir}/${configname}-hosts=${hosts}-sinks=${sinks}#${repetition}.elog"
snapshot-file = "${resultdir}/${configname}-hosts=${hosts}-sinks=${sinks}#${repetition}.sna"
cmdenv-output-file = "${resultdir}/${configname}-hosts=${hosts}-sinks=${sinks}#${repetition}.out"
measurement-label = "hosts=${hosts}-sinks=${sinks}"

include seatbelts_layout.ini
include seatbelts_app.ini

# setting to false speeds up the simulation, 
# but it's also worth running all repetitions at least once with "true"
**.checkScheduleConsistency = false

# to free up the space for dedicated cell scheduling, use cautiously has considerable drawbacks
#**.allowAutoCellDeletion = true

*.host[*].**.sf.scheduleUplinkOnJoin = false # free up scheduling bandwidth near the sink

**sos**.sf.scheduleUplinkManually = true # to ensure repeated attempts at dedicated cell scheduling
**sos**.sf.blacklistSlots = true # to avoid blind guessing of available slot offsets at the parent

**.queueLength = 9000

[Config ITNAC_base]
description = basic config of TSCH vs CSMA comparison for ITNAC 2022 paper
extends = _ReSA_base
result-dir = ITNAC
warmup-period = ${itnacWarmup = 300}s # 100s for DIO dissemination and SLAAC + 200s for schedule adaptation under apps
sim-time-limit = ${itnacSimtime = 1000}s

**.app**.result-recording-modes = default
**.result-recording-modes = -

**.numGW = 1
**.numAM = 0
**.numHS = 0
**.numSoS = 0
**.numBM = 0
**.numWAS = 0

*.host[*].**.transmitter.power = 1mW
*.gw**.**.transmitter.power = 1mW

**gw**.rpl.isRoot = true
**gw**.numApps = 1
**gw**.app[*].typename = "UdpSink"
**gw**.app[*].localPort = 1099
**gw**.app[*].startTime = 0s

*.host**.app[*].startTime = uniform(100, 110) * 1s
*.host**.app[*].stopTime = ${itnacSimtime} * 1s - 40s
*.host**.app[*].sendInterval = 30s

**.rpl.minHopRankIncrease = 2
**.neighbourDiscovery.addRandomDelays = false

**.numHosts = ${hosts = 100} # number of seatbelts, should always come before seatbelts_layout.ini
**.numSinks = ${sinks = 1} # dummy variable required for compatibility with how HPQ uses seat belt layout

include seatbelts_layout.ini
include seatbelts_app.ini
**.numUsers = ${numUsers = 100} # Wi-Fi video streamers, number is chosen just for convenience with an existing implementation
include ism_interference_itnac.ini

# with UDP streaming parameters in ism_interference_itnac.ini, 3 users per AP should result in 100% channel utilization  
*.user*[*].app[1].activeUserRatio = ${activeUserRatio = 0, 0.03, 0.06, 0.09} # 0, 1, 2, 3 users per AP 

output-vector-file = "${resultdir}/${configname}_aur=${activeUserRatio}_#${repetition}.vec"
output-scalar-file = "${resultdir}/${configname}_aur=${activeUserRatio}_#${repetition}.sca"
eventlog-file = "${resultdir}/${configname}_aur=${activeUserRatio}_#${repetition}.elog"
cmdenv-output-file = "${resultdir}/${configname}_aur=${activeUserRatio}_#${repetition}.out"
snapshot-file = "${resultdir}/${configname}_aur=${activeUserRatio}_#${repetition}.sna"
measurement-label = aur=${activeUserRatio}

# setting to false speeds up the simulation, 
# but it's also worth running all repetitions at least once with "true"
**.checkScheduleConsistency = false
**.skipDad = false
**.sf.upperCellUsageLimit = 0.9
**.sf.lowerCellUsageLimit = 0.3
**.sf.maxNumCells = 50

**.sf.cellListFromNodeId = true # experimental, quickly solve the issue of long contention for cells at the sink  

#**.app**endToEndDelay:mean.scalar-recording = true
#**.app**throughput**.result-recording-modes = vector
#**.result-recording-modes= -

[Config ITNAC_Static_Schedule]
**.daoEnabled = false
*.host[*].trickleTimer.startIntervalOverride = ${itnacSimtime}
*.gw*[*].trickleTimer.intervalExponent = 10 # to slow down TT after the first message

**.sf.disable = true
*.host[*].**.mac.schedule.fileName = "/Users/yevhenii/omnetpp-5.6.2-new/samples/tsch/simulations/wireless/waic/schedules/itnac/host_" + string(ancestorIndex(3)) + ".xml"
*.gw*[0].**.mac.schedule.fileName = "/Users/yevhenii/omnetpp-5.6.2-new/samples/tsch/simulations/wireless/waic/schedules/itnac/sink.xml"

[Config ITNAC_reachability_test]
description = check that even farthest devices are able to reach the gateway
extends = ITNAC_base
*.host[0..1].numApps = 1
*.host[98..].numApps = 1
*.host[*].numApps = 0

*.host[0..1].rpl.disabled = false
*.host[98..].rpl.disabled = false
*.host[*].rpl.disabled = true

[Config ITNAC_downlink]
extends = ITNAC_base
*.gw**.numApps = 2
*.gw**.app[1].typename = "UdpBasicApp"
*.gw**.app[1].destAddresses = "host[17](ipv6)" # make sure the host is physically reachable
*.gw**.app[1].startTime = ${itnacWarmup} * 1s
*.gw**.app[1].sendInterval = 10s # TODO: justify? basically we need rather more packets to evaluate highly-interfered cases
*.gw**.app[1].destPort = 1102
*.gw**.app[1].localPort = 1103
*.gw**.app[1].messageLength = 50B
*.host[17].numApps = 2
*.host[17].app[1].typename = "UdpSink"
*.host[17].app[1].startTime = 0
*.host[17].app[1].localPort = 1102

*.host[17].rpl.daoEnabled = true

[Config ITNAC_downlink_all]
extends = ITNAC_base
*.gw**.app[0].typename = "UdpBasicApp"
*.gw**.app[0].destAddresses = "host[0](ipv6) host[1](ipv6) host[2](ipv6) host[3](ipv6) host[4](ipv6) host[5](ipv6) host[6](ipv6) host[7](ipv6) host[8](ipv6) host[9](ipv6) host[10](ipv6) host[11](ipv6) host[12](ipv6) host[13](ipv6) host[14](ipv6) host[15](ipv6) host[16](ipv6) host[17](ipv6) host[18](ipv6) host[19](ipv6) host[20](ipv6) host[21](ipv6) host[22](ipv6) host[23](ipv6) host[24](ipv6) host[25](ipv6) host[26](ipv6) host[27](ipv6) host[28](ipv6) host[29](ipv6) host[30](ipv6) host[31](ipv6) host[32](ipv6) host[33](ipv6) host[34](ipv6) host[35](ipv6) host[36](ipv6) host[37](ipv6) host[38](ipv6) host[39](ipv6) host[40](ipv6) host[41](ipv6) host[42](ipv6) host[43](ipv6) host[44](ipv6) host[45](ipv6) host[46](ipv6) host[47](ipv6) host[48](ipv6) host[49](ipv6) host[50](ipv6) host[51](ipv6) host[52](ipv6) host[53](ipv6) host[54](ipv6) host[55](ipv6) host[56](ipv6) host[57](ipv6) host[58](ipv6) host[59](ipv6) host[60](ipv6) host[61](ipv6) host[62](ipv6) host[63](ipv6) host[64](ipv6) host[65](ipv6) host[66](ipv6) host[67](ipv6) host[68](ipv6) host[69](ipv6) host[70](ipv6) host[71](ipv6) host[72](ipv6) host[73](ipv6) host[74](ipv6) host[75](ipv6) host[76](ipv6) host[77](ipv6) host[78](ipv6) host[79](ipv6) host[80](ipv6) host[81](ipv6) host[82](ipv6) host[83](ipv6) host[84](ipv6) host[85](ipv6) host[86](ipv6) host[87](ipv6) host[88](ipv6) host[89](ipv6) host[90](ipv6) host[91](ipv6) host[92](ipv6) host[93](ipv6) host[94](ipv6) host[95](ipv6) host[96](ipv6) host[97](ipv6) host[98](ipv6) host[99](ipv6)"
*.gw**.app[0].startTime = ${itnacWarmup} * 1s
*.gw**.app[0].stopTime = ${itnacSimtime} * 1s - 60s
*.gw**.app[0].sendInterval = 10s # TODO: justify? basically we need rather more packets to evaluate highly-interfered cases
*.gw**.app[0].destPort = 1102
*.gw**.app[0].localPort = 1103
*.gw**.app[0].messageLength = 50B
*.host[*].app[0].typename = "UdpSink"
*.host[*].app[0].startTime = 0
*.host[*].app[0].localPort = 1102

# disable DIOs
*.host[*].trickleTimer.startIntervalOverride = ${itnacSimtime}
*.gw*[*].trickleTimer.intervalExponent = 10 # to slow down TT after the first message

# but make sure DAOs are on
**.daoEnabled = true

# and the SF
**.sf.disable = true
# full path is required, because relative paths are not expanded? properly when using cmdenv
*.host[*].**.mac.schedule.fileName = "/Users/yevhenii/omnetpp-5.6.2-new/samples/tsch/simulations/wireless/waic/schedules/itnac/downlink/host_" + string(ancestorIndex(3)) + ".xml"
*.gw*[0].**.mac.schedule.fileName = "/Users/yevhenii/omnetpp-5.6.2-new/samples/tsch/simulations/wireless/waic/schedules/itnac/downlink/sink.xml"

[Config ITNAC_throughput_test]
extends = ITNAC_base
description = validating that video stream users' throughput matches the expectation
sim-time-limit = 600s

**.rpl.disabled = true
*.gw**rpl.isRoot = false
*.host[*].numApps = 0

[Config ITNAC_case_1_tsch]
extends = ITNAC_Static_Schedule, ITNAC_base
description = all APs use the same channel, sensors use TSCH, all-to-one traffic
result-dir = ITNAC_case_1
*.ap*[*].wlan[*].radio.channelNumber = 0

[Config ITNAC_case_1_tsch_downlink]
extends = ITNAC_downlink_all
result-dir = ITNAC_case_1_downlink
description = all APs use the same channel, sensors use TSCH, one-to-many traffic
*.ap*[*].wlan[*].radio.channelNumber = 0

[Config ITNAC_case_1_csma]
extends = ITNAC_case_1_tsch
description = all APs using the same channel (overlapping with CSMA), sensors use CSMA
*.host[*].wlan[*].typename = "Ieee802154NarrowbandInterface"
*.host[*].wlan[*].mac.typename = "Ieee802154NarrowbandMac"
*.host[*].radioMedium.typename = "Ieee802154NarrowbandDimensionalRadioMedium"

*.gw**.wlan[*].typename = "Ieee802154NarrowbandInterface"
*.gw**.wlan[*].mac.typename = "Ieee802154NarrowbandMac"
*.gw**.radioMedium.typename = "Ieee802154NarrowbandDimensionalRadioMedium"

[Config _ITNAC_multihop]
*.host[*].**.transmitter.power = 0.005mW
*.gw**.**.transmitter.power = 0.005mW

[Config ITNAC_case_1_tsch_multihop]
result-dir = ITNAC_case_1_multihop
extends = _ITNAC_multihop, ITNAC_base
*.ap*[*].wlan[*].radio.channelNumber = 0

[Config ITNAC_case_1_tsch_multihop_blacklisted]
extends = ITNAC_case_1_tsch_multihop
**.channelHopping.useRandomPattern = false
**.channelHopping.pattern = "26"
**.sf.blacklistingEnabled = true
**.sf.chOfStart = 15
**.sf.chOfEnd = 15

[Config ITNAC_case_1_csma_multihop]
result-dir = ITNAC_case_1_multihop
extends = _ITNAC_multihop, ITNAC_base
*.ap*[*].wlan[*].radio.channelNumber = 0
*.host[*].wlan[*].typename = "Ieee802154NarrowbandInterface"
*.host[*].wlan[*].mac.typename = "Ieee802154NarrowbandMac"
*.host[*].radioMedium.typename = "Ieee802154NarrowbandDimensionalRadioMedium"

*.gw**.wlan[*].typename = "Ieee802154NarrowbandInterface"
*.gw**.wlan[*].mac.typename = "Ieee802154NarrowbandMac"
*.gw**.radioMedium.typename = "Ieee802154NarrowbandDimensionalRadioMedium"

[Config ITNAC_case_1_csma_downlink]
extends = ITNAC_case_1_tsch_downlink
description = all APs use the same channel, sensors use TSCH, one-to-many traffic
*.host[*].wlan[*].typename = "Ieee802154NarrowbandInterface"
*.host[*].wlan[*].mac.typename = "Ieee802154NarrowbandMac"
*.host[*].radioMedium.typename = "Ieee802154NarrowbandDimensionalRadioMedium"

*.gw**.wlan[*].typename = "Ieee802154NarrowbandInterface"
*.gw**.wlan[*].mac.typename = "Ieee802154NarrowbandMac"
*.gw**.radioMedium.typename = "Ieee802154NarrowbandDimensionalRadioMedium"

[Config ITNAC_reachability_test_csma]
description = check that even farthest devices are able to reach the gateway with CSMA
extends = ITNAC_case_1_csma
*.host[0..1].numApps = 1
*.host[98..].numApps = 1
*.host[*].numApps = 0

*.host[0..1].rpl.disabled = false
*.host[98..].rpl.disabled = false
*.host[*].rpl.disabled = true

[Config _ITNAC_blacklisted]
*.host[*].**.mac.schedule.fileName = "/Users/yevhenii/omnetpp-5.6.2-new/samples/tsch/simulations/wireless/waic/schedules/itnac/blacklisted/host_" + string(ancestorIndex(3)) + ".xml"
*.gw*[0].**.mac.schedule.fileName = "/Users/yevhenii/omnetpp-5.6.2-new/samples/tsch/simulations/wireless/waic/schedules/itnac/blacklisted/sink.xml"

[Config ITNAC_case_1_tsch_bl]
extends = _ITNAC_blacklisted, ITNAC_case_1_tsch # order is important!  
result-dir = ITNAC_case_1_tsch_blacklisted
description = all APs using the same channel, TSCH with blacklisting
**.channelHopping.useRandomPattern = false
**.channelHopping.pattern = "26" # just lock the channel hopping completely

[Config _AP_separate_channels]
*.ap*[0].wlan[*].radio.channelNumber = 0
*.ap*[1].wlan[*].radio.channelNumber = 5
*.ap*[2].wlan[*].radio.channelNumber = 10

[Config ITNAC_case_2_tsch]
extends = _AP_separate_channels, ITNAC_case_1_tsch # make sure AP channel separation is read first
result-dir = ITNAC_case_2
description = all APs using different channels, TSCH

[Config ITNAC_case_2_tsch_bl]
extends = _ITNAC_blacklisted, ITNAC_case_2_tsch # order is important!  
result-dir = ITNAC_case_2_tsch
**.channelHopping.useRandomPattern = false
**.channelHopping.pattern = "26"

[Config ITNAC_interference_test]
warmup-period = 100s

*.ap*[2].wlan[*].radio.channelNumber = ${ap2 = 7, 10}
measurement-label = ap2=${ap2}
output-vector-file = "${resultdir}/${configname}_ap2=${ap2}_#${repetition}.vec"
output-scalar-file = "${resultdir}/${configname}_ap2=${ap2}_#${repetition}.sca"
eventlog-file = "${resultdir}/${configname}_ap2=${ap2}_#${repetition}.elog"
cmdenv-output-file = "${resultdir}/${configname}_ap2=${ap2}_#${repetition}.out"
snapshot-file = "${resultdir}/${configname}_ap2=${ap2}_#${repetition}.sna"

extends = ITNAC_case_2_tsch_bl
*.host[80..89].numApps = 1
*.host[80..89].app[0].sendInterval = 2s
*.host[*].numApps = 0

*.host[80..89].rpl.disabled = false
*.host[*].rpl.disabled = true
**.rpl.daoEnabled = false

*.user1[83..84].numApps = 1
*.user1[83..84].app[0].startTime = 100s
*.user1[*].app[0].startTime = 1000s

*.server*.app[1].sendInterval = 10ms

[Config ITNAC_case_2_tsch_downlink]
extends = _AP_separate_channels, ITNAC_case_1_tsch_downlink
result-dir = ITNAC_case_2_downlink

[Config ITNAC_case_2_csma]
extends = _AP_separate_channels, ITNAC_case_1_csma 
result-dir = ITNAC_case_2
description = all APs using different channels, CSMA

[Config ITNAC_case_2_csma_downlink]
extends = _AP_separate_channels, ITNAC_case_1_csma_downlink
result-dir = ITNAC_case_2_downlink

[Config ITNAC_case2_tsch_bl]
extends = ITNAC_base
description = all APs using different channels, which are statically blacklisted in TSCH

[Config ReSA_CSMA_Seatbelts]
extends = ReSA_CSMA, ReSA_Seatbelts

[Config ReSA_Seatbelts_Uplink]
extends = ReSA_Seatbelts, ReSA_Uplink
result-dir = ReSA_Seatbelts_Uplink

[Config ReSA_Seatbelts_HPQ]
extends = ReSA_Seatbelts, ReSA_HPQ

[Config ReSA_Seatbelts_HPQ_Uplink]
extends = ReSA_Seatbelts_Uplink, ReSA_HPQ

[Config ReSA_Seatbelts_Infq]
extends = ReSA_Seatbelts
result-dir = ReSA_Seatbelt_Inf_Queue

[Config ReSA_Seatbelts_Infq_HPQ]
result-dir = ReSA_Seatbelt_Inf_Queue
extends = ReSA_Seatbelts_Infq, ReSA_HPQ

[Config ReSA_Seatbelts_Infq_Uplink]
extends = ReSA_Seatbelts_Infq, ReSA_Uplink

[Config ReSA_Seatbelts_Infq_Uplink_HPQ]
extends = ReSA_Seatbelts_Infq_HPQ, ReSA_Uplink

[Config _Altimeter]
**.radioMedium.analogModel.typename = "WaicDimensionalAnalogModel"
**.T_chirp = ${tChirp = 0.02}
**.RA_OffSet="0.00s"
# TODO: adjust these to a meaningful location for your particular scenario
**.AltimeterLocations="(7.62,1.4,5.4)m (8.13,1.4,5.4)m"
**.f_chirp_max = 4300.0e6
**.am1[*].app**.result-recording-modes = default
**.result-recording-modes= -

[Config ReSA_Altimeter]
extends = ReSA, _Altimeter
result-dir = ReSA_Altimeter

**.T_chirp = 0.02

**sos**.sf.scheduleUplinkManually = true # to ensure dedicated cell
**sos**.sf.blacklistSlots = true # to avoid blind guessing of available slot offsets at the parent

[Config ReSA_Altimeter_43]
extends = ReSA_Altimeter
**.macSlotframeSize = 43

[Config ReSA_Altimeter_100Hz]
extends = ReSA_Altimeter

**.T_chirp = 0.01

[Config ReSA_Altimeter_100Hz_43]
extends = ReSA_Altimeter_100Hz
**.macSlotframeSize = 43

[Config ReSA_Altimeter_Downlink]
extends = ReSA_Altimeter
**am**.rpl.downlinkRequired = true

[Config ReSA_Ultimate_Altimeter]
extends = ReSA_Altimeter, ReSA_Ultimate
result-dir = ReSA_WAIC_Ultimate

[Config ReSA_Ultimate_Altimeter_2]
extends = ReSA_Ultimate_Altimeter
**.macSlotframeSize = 53

[Config ReSA_Ultimate_Altimeter_3]
extends = ReSA_Ultimate_Altimeter
**.macSlotframeSize = 40

[Config ReSA_Ultimate_Altimeter_4]
extends = ReSA_Ultimate_Altimeter
**.macSlotframeSize = 73
**.cellBundleSize = 4

[Config ReSA_Altimeter_2]
extends = ReSA_Altimeter
**.RA_OffSet="0.01s"

[Config ReSA_Altimeter_Uplink]
extends = ReSA_Altimeter, ReSA_Uplink

[Config ReSA_Altimeter_Uplink_2]
extends = ReSA_Altimeter_2, ReSA_Uplink

[Config ReSA_Altimeter_Low_Latency_HPQ]
extends = ReSA_Altimeter, ReSA_HPQ
**.lowLatencyMode = true

[Config ReSA_Altimeter_Uplink_Low_Latency_HPQ]
extends = ReSA_Altimeter_Low_Latency_HPQ, ReSA_Uplink

[Config ReSA_Altimeter-Seatbelts]
extends = ReSA_Seatbelts, ReSA_Altimeter

[Config ReSA_Low_Latency_Seatbelts]
extends = ReSA_Seatbelts, ReSA_Low_Latency

**.minHopRankIncrease = 10 # disabled parent changing for better traceability
*.host[*].**.sf.scheduleUplinkOnJoin = false # free up some bandwidth near the sink

[Config ReSA_Low_Latency_Uplink]
extends = ReSA_Uplink, ReSA_Low_Latency

[Config ReSA_Seatbelts_Uplink_Low_Latency]
extends = ReSA_Low_Latency_Seatbelts, ReSA_Uplink

[Config ReSA_ISM-NoBitError]
extends = ReSA_ISM
result-dir=ReSA_ISM-NoBitError
**.mac.ignoreBitErrors = true

[Config ReSA_ISM-HPQ]
extends = ReSA_ISM
result-dir=ReSA_ISM-HPQ1
*.gw*[*].app[0].virtualLinkId = -2
*.sos*[*].app[0].virtualLinkId = -2

[Config ReSA_ISM-HPQ-NoBitError]
extends = ReSA_ISM-HPQ, ReSA_ISM-NoBitError
result-dir=ReSA_ISM-HPQ-NoBitError

[Config ReSA_ISM-Seatbelts]
extends = ReSA_ISM
result-dir =  ReSA_ISM-Seatbelts
**.numHosts = ${hosts = 198} # seatbelts
**.numSinks = ${sinks = 1} # seatbelts

# set to "false" to speed up the simulation, worth running all repetitions at least once with "true"
**.checkScheduleConsistency = false

**.allowAutoCellDeletion = true # to free up the space for dedicated cell scheduling, has considerable drawbacks

include seatbelts_layout.ini
include seatbelts_app.ini

# seatbelt grid orients itself around gateway location, which is
# supposed to be in the middle of the aircraft, but is, in fact, a bit shifted

**.host[*].rpl.daoEnabled = false # no downlink traffic for seatbelts is needed

# to disperse a bit the neighborhood around the sink, TODO: make dynamic, or synthesise into objective function 
**.host[*].rpl.joinAtSinkPowerThresh = 2 #pW

**sos**.sf.scheduleUplinkManually = true # to ensure dedicated cell
**sos**.sf.blacklistSlots = true # to avoid blind guessing of available slot offsets at the parent

[Config ReSA_ISM-HPQ-Seatbelts]
extends = ReSA_ISM-Seatbelts, ReSA_ISM-HPQ
result-dir=ReSA_ISM-HPQ-Seatbelts

[Config ReSA_ISM-Improved]
extends = ReSA_ISM
result-dir=ReSA_ISM-Improved

# set to "false" to speed up the simulation, worth running all repetitions at least once with "true"
**.checkScheduleConsistency = false

**.allowAutoCellDeletion = true # to free up the space for dedicated cell scheduling, has considerable drawbacks

**sos**.sf.scheduleUplinkManually = true # to ensure dedicated cell
**sos**.sf.blacklistSlots = true # to avoid blind guessing of available slot offsets at the parent

[Config ReSA_ISM_Interference]
extends = ReSA_ISM
result-dir = ReSA_ISM_Interference
output-scalar-file = ${resultdir}/${configname}_AUR=${activeUserRatio}_${repetition}.sca
output-vector-file = ${resultdir}/${configname}_AUR=${activeUserRatio}_${repetition}.vec
eventlog-file = ${resultdir}/${configname}_AUR=${activeUserRatio}_${repetition}.elog
snapshot-file = ${resultdir}/${configname}_AUR=${activeUserRatio}_${repetition}.sna
cmdenv-output-file = ${resultdir}/${configname}_AUR=${activeUserRatio}_${repetition}.out

measurement-label = aur=${activeUserRatio}

**.numUsers = ${numUsers = 198} # set numUsers to 0 in order to disable
include ism_interference.ini

*.user*[*].app[1].activeUserRatio = ${activeUserRatio = 0, 0.1, 0.2, 0.3, 0.4}

# to speed up the simulations a little
**.radioModeFilter = true
#**.macAddressFilter = true # breaks something in the MAC layer
**.checkScheduleConsistency = false

# we don't really need any dedicated cells since SOS packets are only broadcasted in minimal cells
#**.sf.scheduleUplinkOnJoin = false
#**.daoEnabled = false

[Config _ReSA_Coexistence]
**.numAircrafts = 2
**.enableObstacles = true
**.obstacleLoss.typename = "ReSAObstacleLoss"
**.physicalEnvironment.config = xmldoc("ReSA_obstacles.xml")
**.displayIntersections = true

[Config ReSA_Broadcast_Alarm]
extends = ReSA_ISM
*.am*[*].app[0].typename = "ResaSmokeUdpSink"
*.am*[*].app[0].receiveBroadcast = true
*.am*[*].app[0].localPort = 4
*.am1[*].app[0].multicastGroup = "ff02::1"
*.am2[*].app[0].multicastGroup = "ff02::2"
*.am3[*].app[0].multicastGroup = "ff02::3"
*.am4[*].app[0].multicastGroup = "ff02::4" 

*.sos*[*].app[0].typename = "UdpBasicApp"
#*.sos*[*].app[0].startTime = ${sosStart = uniform($warmup + 200, $simtime - 100) * 1s} # was -500s
*.sos*[*].app[0].startTime = ${sosStart = uniform($warmup + 200, $warmup + 600) * 1s} # was -500s
# should be really low to quickly queue "copies" of the same packet 
# and lessen the impact on end-to-end delay we're trying to evaluate here
*.sos*[*].app[0].sendInterval = ${sosInterval = 0.001s}
*.sos*[*].app[0].stopTime = this.startTime + ${sosInterval} * ${r = 3}
*.sos1[*].app[0].destAddresses = "ff02::1"
*.sos2[*].app[0].destAddresses = "ff02::2"
*.sos3[*].app[0].destAddresses = "ff02::3"
*.sos4[*].app[0].destAddresses = "ff02::4"
*.sos*[*].app[0].destPort = 4

**.radio.transmitter.power = 0.05mW # originally 0.05 mW

[Config ReSA_Coexistence_ISM]
extends = _ReSA_Coexistence, ReSA_Broadcast_Alarm

[Config ReSA_Broadcast_Alarm_CSMA]
extends = ReSA_Broadcast_Alarm, ReSA_CSMA_ISM

[Config ReSA_ISM_Case_1]
description = WiFi APs using channels 1, 6 and 11 incur highest interference for ReSA sensors 
extends = ReSA_ISM_Interference, ReSA_Broadcast_Alarm
**.channelHopping.blacklistedChannels = "11 12 13 14 16 17 18 19 21 22 23 24"

[Config ReSA_ISM_Case_1_No_BL]
extends = ReSA_ISM_Case_1
result-dir = ReSA_ISM_Case_1_No_BL
**.channelHopping.blacklistedChannels = ""

[Config ReSA_ISM_Case_1_Fully_Blacklisted]
extends = ReSA_ISM_Case_1
**.channelHopping.useRandomPattern = false
**.sf.minCellChannelOffset = 26
**.channelHopping.pattern = "26"

[Config ReSA_ISM_Fully_Blacklisted_Coexistence]
extends = ReSA_ISM_Case_1_Fully_Blacklisted, _ReSA_Coexistence
result-dir = ReSA_ISM_Fully_Blacklisted_Coexistence

[Config ReSA_ISM_Interference_Test]
description = WiFi Channel 1 (4.12 GHz) interference with 802.15.4 channel 15 (4.25 GHz) test 
extends = ReSA_ISM_Interference, ReSA_Broadcast_Alarm
sim-time-limit = 1400s

**.channelHopping.useRandomPattern = false
**.sf.minCellChannelOffset = ${ch = 15, 20, 25, 26}
**.channelHopping.pattern = ${"15", "20", "25", "26" ! ch}

measurement-label = aur=${activeUserRatio}_ch=${ch}
output-scalar-file = ${resultdir}/${configname}_AUR=${activeUserRatio}_ch=${ch}_${repetition}.sca
output-vector-file = ${resultdir}/${configname}_AUR=${activeUserRatio}_ch=${ch}_${repetition}.vec

**.sos*[*].app[0].startTime = 1350s
**.sos*[*].app[0].stopTime = this.startTime + ${sosInterval} * 100
**.sos1[8].numApps = 1
**.sos*[*].numApps = 0
**.am**.numApps = 1
#**.sos**.transmitter.power = 1mW

#**user1[10].numApps = 1 # was 15
**user1[0..10].numApps = 1
#**user*[*].numApps = 2
#**.numApps = 0

*.am*[*].app[0].typename = "UdpSink"
**.queueLength = 200

[Config ReSA_ISM_Interference_Test_Single_User]
extends = ReSA_ISM_Interference_Test
**user1[10].numApps = 1
**user1[*].numApps = 2

[Config ReSA_ISM_Interference_Test_Max_Saturation]
extends = ReSA_ISM_Interference_Test
**user1[0..25].numApps = 1
**user1[*].numApps = 2

[Config ReSA_ISM_Interference_Test_No_Apps]
extends = ReSA_ISM_Interference_Test
**.sos1[8].numApps = 1
**.am**.numApps = 1
**user1[0..10].numApps = 1
**user*[*].numApps = 2
**.numApps = 0

[Config ReSA_ISM_Case_1_CSMA]
extends = ReSA_ISM_Interference, ReSA_Broadcast_Alarm_CSMA
result-dir = ReSA_ISM_Case_1_CSMA

[Config ReSA_ISM_Case_1_CSMA_MAC_Filter]
extends = ReSA_ISM_Case_1_CSMA
**.macAddressFilter = true

[Config ReSA_ISM_Case_3]
description = WiFi APs using channel 1 incur highest interference for CSMA, but also free most 15.4 channels for TSCH hopping
extends = ReSA_ISM_Interference, ReSA_Broadcast_Alarm
**.channelHopping.blacklistedChannels = "11 12 13 14"

*.ap*[*].wlan[*].radio.channelNumber = 0

[Config ReSA_ISM_Case_3_CSMA]
extends = ReSA_ISM_Interference, ReSA_Broadcast_Alarm_CSMA
*.ap*[*].wlan[*].radio.channelNumber = 0


