[General]
num-rngs = 10
check-signals = false # remove this and change modules accordingly
*.cmdenv-log-level=detail
**.result-recording-modes=default,-histogram
**.mobility.rng-0 = 1
**.wlan[*].mac.rng-0 = 7

include common.ini
include delay_testing.ini
#include avionic.ini

**.sf.timeout = 35000ms
**.macMaxBE = 5 # maximum backoff exponent should correspond to the SF timeout value

[Config HPQ]
network = HighDensity
repeat = 28
sim-time-limit = 400s
warmup-period = 200s
**.queueUtilization.result-recording-modes = -
**.result-recording-modes = -histogram # some weird bit error histogram often crashes the simulation at the end

result-dir = HPQ_On

**.radio.transmitter.power = 0.000073mW 
include waic_radio.ini

**.wrrEnabled = true

**.daoEnabled = false
**.minHopRankIncrease = 1

*.numHosts = ${numHosts = 50, 200}
*.numSinks = ${numSinks = 1, 3, 5}

**.queueLength = 20

# MSF params
**.sf.numMinCells = 10
**.sf.maxNumCells = intuniform(40, 50) # intuniform(10, 15)
**.sf.queueEstimationPeriod = uniform(10s, 20s)
**.sf.showTxCellCount = true
**.sf.showQueueUtilization = true
**.sf.send6pDelayed = false
**.sf.showDedicatedTxCells = false
**.sf.upperCellUsageLimit = 0.9 # add cells only when utilization is really high
**.sf.lowerCellUsageLimit = -1 # do not remove cells
**.sf.queueUtilUpperThresh = 0.8
**.sf.deleteOverlappingMinCells = false # keep minimal cells even if they overlap with auto cell
**.sf.disableHousekeeping = true
**.sf.housekeepingPeriod = 10s

include seatbelts_layout.ini

## Apps
**.numApps = 3

*.sink[*].app[*].typename = "UdpSink"
*.sink[*].app[*].localPort = 1000 + index()
*.sink[*].app[*].startTime = ${startTime = 100}s

**.sf.housekeepingStart = ${startTime} 

*.host[*].app[*].typename = "TschUdpBasicApp"
*.host[*].app[*].destPort = 1000 + index()
*.host[*].app[*].destAddresses = "sink[0](ipv6)"
*.host[*].app[*].messageLength = 50B

# Seatbelt status
*.host[*].app[0].VirtualLinkID = 1 # low prio
*.host[*].app[0].startTime = uniform(${startTime}, ${startTime} + 10) * 1s

# Humidity
*.host[*].app[2].VirtualLinkID = 0 # normal prio

# Smoke
*.host[*].app[1].VirtualLinkID = -1 # high prio
*.host[*].app[1].sendInterval = 2s # was 2s
*.host[*].app[1].stopTime = this.startTime + 120s # let bursty traffic run for only a few min

# uncomment depending on the $numNodes param
#include hpq_50.ini
include hpq_200.ini

# disable smoke and humidity sensors on all other nodes
*.host[*].app[1].startTime = 20h
*.host[*].app[2].startTime = 20h

[Config HPQ_Off]
extends = HPQ
result-dir = HPQ_Off
*.host[*].app[0].VirtualLinkID = 0
*.host[*].app[1].VirtualLinkID = 0
*.host[*].app[2].VirtualLinkID = 0 

[Config ReSA]
network = ReSA
repeat = 40
sim-time-limit = ${simtime = 3000}s
warmup-period = ${warmup = 1000}s
result-dir = ReSA
#result-dir = ReSA_ISM # uncomment this, if no waic_radio.ini is included
**.vector-recording = true

**.numDaoRetransmitAttempts = 20 # crucial to ensure that a sink can route packets downwards

include ReSA.ini
include waic_radio.ini

**.ipv6.neighbourDiscovery.raEnabled = false
**.ipv6.neighbourDiscovery.skipDad = true
**.ipv6.neighbourDiscovery.addRandomDelays = true

**.sf.timeout = 60000ms # tricky, should be best set dynamically

# To disable channel hopping
#**.channelHopping.pattern = "1"
#**.channelHopping.useRandomPattern = false

**.channelHopping.useRandomPattern = true
**.sf.minCellChannelOffset = 39 # highest frequency for DIOs ensures reliable parent selection

#**.mac.ignoreBitErrors = false # TODO: causes more problems than it solves
#**.sf.downlinkDedicated = true

**.gw*.rpl.startDelay = 10
**.nsForwardingDelay = 1s # solves extreme congestion during IPv6 neighbour discovery  

# no need for DAOs except from the destinations we're routing to - analytic modules
# AND the sources of important data - smoke alarms  
*.am*[*].rpl.daoEnabled = true
*.sos*[*].rpl.daoEnabled = true
**.daoEnabled = false

*.sos*[*].app[0].startTime = uniform(${warmup}s + 200s, ${simtime}s - 500s)
*.sos*[*].app[0].sendInterval = ${simtime}s

**.app[*].startTime = uniform(${warmup} - 1, ${warmup}) * 1s # give enough time for CLX second phase

*.sos*[*].app[0].startTime.param-record-as-scalar = true

[Config ReSA-CLX]
extends = ReSA
result-dir=ReSA-CLX
**.sf.typename = "TschCLSF"
**.rpl.crossLayerEnabled = true
**.rpl.clPhase2Timeout = ${warmup} - 200

**.rpl.sinkNeighborWeight = 1.5

[Config ReSA-HPQ]
extends = ReSA
*.gw*[*].app[0].virtualLinkId = -2
*.sos*[*].app[0].virtualLinkId = -2

[Config ReSA-Low-Latency]
extends = ReSA
**.lowLatencyMode = true

[Config ReSA-Low-Latency-HPQ]
extends = ReSA-Low-Latency, ReSA-HPQ

## EXTRA PARAMS ONLY FOR ISM BAND
#**.lowLatencyStartingOffset = 10
#**sos**.sf.scheduleUplinkManually = true # to ensure dedicated cell
#**sos**.sf.blacklistSlots = true # to avoid blind guessing of available slot offsets at the parent

[Config ReSA-Uplink]
extends = ReSA
result-dir= ReSA_Uplink

*.gw*[*].app[0].typename = "UdpSink"
*.sos*[*].app[0].typename = "TschUdpBasicApp"

[Config ReSA-Uplink-HPQ]
extends = ReSA-Uplink, ReSA-HPQ

[Config ReSA-Uplink-HPQ-Low-Latency]
extends = ReSA-Uplink, ReSA-HPQ
**.lowLatencyMode = true

[Config ReSA-Uplink-CLX]
extends = ReSA-Uplink, ReSA-CLX

[Config ReSA-No-Random-Delays]
extends = ReSA-HPQ
result-dir = ReSA-No-Random-Delays

**.nsForwardingDelay = 0
**.ipv6.neighbourDiscovery.addRandomDelays = false

[Config ReSA-No-Random-Delays-CLX]
extends = ReSA-CLX

result-dir = ReSA-No-Random-Delays

**.nsForwardingDelay = 0
**.ipv6.neighbourDiscovery.addRandomDelays = false

*.gw*[*].app[0].virtualLinkId = -2
*.sos*[*].app[0].virtualLinkId = -2

[Config ReSA_Seatbelts]
extends = ReSA
result-dir = ReSA_Seatbelts
**.numHosts = ${numHosts = 100} # number of seatbelts, should always come before seatbelts_layout.ini 

include seatbelts_layout.ini
include seatbelts_app.ini

# setting to false speeds up the simulation, 
# but it's also worth running all repetitions at least once with "true"
**.checkScheduleConsistency = false

# to free up the space for dedicated cell scheduling, has considerable drawbacks
#**.allowAutoCellDeletion = true 

*.host[*].**.sf.scheduleUplinkOnJoin = false # free up scheduling bandwidth near the sink

**sos**.sf.scheduleUplinkManually = true # to ensure repeated attempts at dedicated cell scheduling
**sos**.sf.blacklistSlots = true # to avoid blind guessing of available slot offsets at the parent

[Config ReSA_Seatbelts_Uplink]
extends = ReSA_Seatbelts, ReSA-Uplink
result-dir = ReSA_Seatbelts_Uplink

[Config ReSA_Seatbelts_HPQ]
extends = ReSA_Seatbelts, ReSA-HPQ

[Config ReSA_Seatbelts_HPQ_Uplink]
extends = ReSA_Seatbelts_Uplink, ReSA-HPQ

[Config ReSA_Seatbelts_Infq]
extends = ReSA_Seatbelts
result-dir = ReSA_Seatbelt_Inf_Queue
**.queueLength = 9000

[Config ReSA_Seatbelts_Infq_HPQ]
result-dir = ReSA_Seatbelt_Inf_Queue
extends = ReSA_Seatbelts_Infq, ReSA-HPQ

[Config ReSA_Seatbelts_Infq_Uplink]
extends = ReSA_Seatbelts_Infq, ReSA-Uplink

[Config ReSA_Seatbelts_Infq_Uplink_HPQ]
extends = ReSA_Seatbelts_Infq_HPQ, ReSA-Uplink

[Config ReSA-Altimeter]
extends = ReSA

# ensure proper directory name based on the chirp period
**.T_chirp = ${tChirp = 0.02}
result-dir = ReSA_altimeter_T_20_ms

**.radioMedium.analogModel.typename = "WaicDimensionalAnalogModel"
**.RA_OffSet="0.0s"
# based on the info from LHT: two altimeters relatively close to each other at the front
**.AltimeterLocations="(7.62, 1.4, 5.4)m (8.13, 1.4, 5.4)m"
**.f_chirp_max = 4300.0e6

**sos**.sf.scheduleUplinkManually = true # to ensure dedicated cell
**sos**.sf.blacklistSlots = true # to avoid blind guessing of available slot offsets at the parent

**.lowLatencyStartingOffset = 1 # only for ISM band, otherwise low-latency mode has not enough bandwidth

[Config ReSA-Altimeter-Uplink]
extends = ReSA-Altimeter, ReSA-Uplink

[Config ReSA-Altimeter-Low-Latency-HPQ]
extends = ReSA-Altimeter, ReSA-HPQ
**.lowLatencyMode = true

[Config ReSA-Altimeter-Uplink-Low-Latency-HPQ]
extends = ReSA-Altimeter-Low-Latency-HPQ, ReSA-Uplink

[Config ReSA-Altimeter-Seatbelts]
extends = ReSA_Seatbelts, ReSA-Altimeter

[Config ReSA-Low-Latency-Seatbelts]
extends = ReSA_Seatbelts, ReSA-Low-Latency

**.minHopRankIncrease = 10 # disabled parent changing for better traceability
*.host[*].**.sf.scheduleUplinkOnJoin = false # free up some bandwidth near the sink

[Config ReSA-Low-Latency-Uplink]
extends = ReSA-Uplink, ReSA-Low-Latency

[Config ReSA_Seatbelts_Uplink_Low_Latency]
extends = ReSA-Low-Latency-Seatbelts, ReSA-Uplink

# TODO: buggy
#[Config ReSA-Altimeter-Dowlink-Dedicated]
#extends = ReSA-Altimeter
#**.sf.downlinkDedicated = true
#
#[Config ReSA-Altimeter-Low-Latency-HPQ-Downlink-Dedicated]
#extends = ReSA-Altimeter-Dowlink-Dedicated, ReSA-Altimeter-Low-Latency-HPQ











