[General]
num-rngs = 10
check-signals = false # remove this and change modules accordingly
*.cmdenv-log-level=detail
**.result-recording-modes=default,-histogram
**.mobility.rng-0 = 1
**.wlan[*].mac.rng-0 = 7

include common.ini

**.sf.timeout = 35000ms
**.macMaxBE = 5 # maximum backoff exponent should correspond to the SF timeout value

[Config HPQ]
network = HighDensity
repeat = 35
sim-time-limit = ${simLimit=800s}
warmup-period = ${warmup=500s}

*.numHosts = ${numHosts = 200}
*.numSinks = ${numSinks = 1..5}

result-dir = HPQ
output-vector-precision = 4
output-scalar-precision = 4 
output-vector-file = "${resultdir}/${configname}-hosts=${numHosts}-sinks=${numSinks}-${runnumber}.vec"
output-scalar-file = "${resultdir}/${configname}-hosts=${numHosts}-sinks=${numSinks}-${runnumber}.sca"

eventlog-file = "${resultdir}/${configname}-hosts=${numHosts}-sinks=${numSinks}#${repetition}.elog"
snapshot-file = "${resultdir}/${configname}-hosts=${numHosts}-sinks=${numSinks}#${repetition}.sna"
cmdenv-output-file = "${resultdir}/${configname}-hosts=${numHosts}-sinks=${numSinks}#${repetition}.out"
measurement-label = "hosts=${numHosts}-sinks=${numSinks}"

**.result-recording-modes = -histogram # some weird bit error histogram often crashes the simulation at the end
**.bin-recording = false

#**.app**.statistic-recording = true
#**.statistic-recording = false

**.radioModeFilter = true
**.listeningFilter = true
**.macAddressFilter = true

#**.radio.transmitter.power = 0.000073mW 

include waic_radio.ini

**.wrrEnabled = true
**.daoEnabled = false

**.rpl.minHopRankIncrease = 2 # speed up topology convergence

# disable Ipv6 clutter
**.ipv6.neighbourDiscovery.raEnabled = false
**.ipv6.neighbourDiscovery.skipDad = true
**.ipv6.neighbourDiscovery.addRandomDelays = true

# Ensure reliable and robust connectivity
**.channelHopping.useRandomPattern = true
**.sf.minCellChannelOffset = 39 # highest frequency for DIOs ensures reliable parent selection
**.sf.checkScheduleConsistency = false # to speed up the simulation a bit

# MSF params	
**.sf.numMinCells = 10
**.sf.maxNumCells = 100 # intuniform(10, 15)
**.sf.upperCellUsageLimit = 0.75 # add cells only when utilization is really high
**.sf.lowerCellUsageLimit = 0.25 # do not remove cells
**.sf.disableHousekeeping = true
**.sf.showTxCellCount = true
**.sf.timeout = 60000ms
**.sf.maxNumCellsScalingFactor = 4 # recommended by RFC 9033
**.sf.allowAutoCellDeletion = false # to free up the schedule around sink by deleting redundant neighbors' auto cells 

include seatbelts_layout.ini

**.mobility.rotateHorizontally = false

## Apps
**.numApps = 3

*.sink[*].app[*].typename = "UdpSink"
*.sink[*].app[*].localPort = 1000 + index()
*.sink[*].app[*].startTime = ${startTime = 100}s 

*.host[*].app[*].typename = "TschUdpBasicApp"
*.host[*].app[*].destPort = 1000 + index()
*.host[*].app[*].messageLength = 50B

# Seatbelt status
*.host[*].app[0].virtualLinkId = 0 # normal prio
*.host[*].app[0].packetName = "SeatbeltApp"
*.host[*].app[0].startTime = uniform(${startTime}, ${startTime} + 10) * 1s
 
# Smoke
*.host[*].app[1].virtualLinkId = -1 # high prio
*.host[*].app[1].sendInterval = 2s
*.host[*].app[1].stopTime = this.startTime + this.sendInterval # one smoke alarm event per simulation 
*.host[*].app[1].packetName = "SmokeAlarmApp"

# Humidity
*.host[*].app[2].virtualLinkId = 1 # low prio
*.host[*].app[2].packetName = "HumidityApp"

include hpq_200.ini

# disable smoke and humidity sensors on all other nodes
*.host[*].app[1].startTime = 20h
*.host[*].app[2].startTime = 20h


[Config HPQ_Off]
extends = HPQ
*.host[*].app[0].virtualLinkId = 0
*.host[*].app[1].virtualLinkId = 0
*.host[*].app[2].virtualLinkId = 0 

[Config _HPQ_Model_Verification]
network = HighDensity
warmup-period = 200s
sim-time-limit = ${simLimit = 2000s}
repeat = 50

**.sf.upperCellUsageLimit = 1.1
**.sf.lowerCellUsageLimit = -1

**.app[*].startTime = uniform(20s, 22s)
**.numApps = 3
*.sink[*].app[*].typename = "UdpSink"
*.sink[*].app[*].localPort = 1000 + index()

*.host[*].app[*].destPort = 1000 + index()
*.host[*].app[*].typename = "TschUdpBasicApp"
*.host[*].app[*].messageLength = 50B

*.host[*].app[0].virtualLinkId = -1
*.host[*].app[1].virtualLinkId = 0
*.host[*].app[2].virtualLinkId = 1

**.sf.disableHousekeeping = true
**.queueLength = 20000
**.wrrEnabled = true
**.daoEnabled = false
**.macMaxFrameRetries = 0

*.sink[0].mobility.initialX = 3m
*.sink[0].mobility.initialY = 3m
*.host[0].mobility.initialX = 4m
*.host[0].mobility.initialY = 3m
**.constraintAreaMaxX = 10m
**.constraintAreaMaxY = 10m

[Config HPQ_Model_Verification_All_Queues]
extends = _HPQ_Model_Verification
result-dir = hpq_verif
*.host[*].app[*].sendInterval = exponential(1 / ${rate = 0.05..0.3 step 0.05} * 1s)

[Config HPQ_Model_Verification_2_Queues]
extends = HPQ_Model_Verification_All_Queues
result-dir = hpq_verif_2_queues
**.app[2].startTime = 20h

[Config HPQ_Model_Verification_WRR_Effect]
extends = _HPQ_Model_Verification
result-dir = hpq_verif_wrr_effect
**.wrrWeigthBe = ${wrrBe = 1..3 step 1}
**.wrrWeigthNp = ${wrrNp = 4}

**.host[*].app[1].stopTime = ${simLimit} - 50s
**.host[*].app[2].stopTime = ${simLimit} - 50s

**.app[0].startTime = 20h
**.app[0].sendInterval = 20h
**.app[1].sendInterval = exponential((${wrrNp} + ${wrrBe})/${wrrNp} * 1s) # 4 - weight of NP traffic
**.app[2].sendInterval = exponential(1 / ${rateBe = 0.05..0.5 step 0.05} * 1s)

[Config HPQ_Model_Verification_WRR_NP_effect]
extends = _HPQ_Model_Verification
result-dir = hpq_verif_wrr_np_effect
**.app[0].startTime = 20h
**.app[0].sendInterval = 20h
**.app[1].sendInterval = exponential(1 / ${rateNp = 0.2, 0.4, 0.6} * 1s)
**.app[2].sendInterval = exponential(1 / ${rateBe = 0.05..0.4 step 0.05} * 1s)