[General]
num-rngs = 3
check-signals = false # remove this and change modules accordingly
*.cmdenv-log-level=detail
**.mobility.rng-0 = 1
**.wlan[*].mac.rng-0 = 1

include common.ini
#include delay_testing.ini
#include waic_radio.ini
#include avionic.ini

[Config SampleScenarioCheng]
network = Linear
*.numHosts = 4

*.sink[0].mobility.initialX = 10m
*.sink[0].mobility.initialY = 10m
*.host[0].mobility.initialX = 20m
*.host[0].mobility.initialY = 10m
*.host[1].mobility.initialX = 20m
*.host[1].mobility.initialY = 20m
*.host[2].mobility.initialX = 30m
*.host[2].mobility.initialY = 10m
*.host[3].mobility.initialX = 30m
*.host[3].mobility.initialY = 20m

# manual broken link simulation
*.host[*].**.mac.packetDropThreshold = 0.1
*.host[1].**.mac.lossyLinkTimeout = 40s
*.host[2].rpl.unreachabilityDetectionEnabled = true

**.numApps = 1
**.app[0].startTime = uniform(20s, 30s)
**.host[*].app[0].sendInterval = exponential(1s)

**.mac.macMaxFrameRetries = 2

[Config SampleScenarioLukas]
network = Linear
repeat = 30
*.numHosts = ${N = 1, 2, 3}
*.sink[0].mobility.initialX = 10m
*.sink[0].mobility.initialY = 10m
*.host[0].mobility.initialX = 20m
*.host[0].mobility.initialY = 10m
*.host[1].mobility.initialX = 30m
*.host[1].mobility.initialY = 10m
*.host[2].mobility.initialX = 40m
*.host[2].mobility.initialY = 10m

**.mac.macMaxFrameRetries = 3

**.numApps = 1 # each module has only 1 app
**.app[0].startTime = uniform(20s, 30s) # give some warmup period for 6TiSCH scheduling and RPL 
**.host[*].app[0].sendInterval = exponential(1s) # poissonian arrivals

# Scenario for Louis
[Config SimpleWaic]
#extends = _Waic
network = SimpleWaic

## Define your scenarios here

**.radio.transmitter.power = 0.03273mW # original WAIC TX power 

*.numHosts = 10

**.hasIpv4 = true
**.hasIpv6 = false

# TODO: Redefine using StaticGridMobility to construct aircraft-like scenario 
*.host[*].mobility.initialX = uniform(10m, 30m)
*.host[*].mobility.initialY = uniform(10m, 70m)

**.mobility.initFromDisplayString = false

*.sink[0].mobility.initialX = 15m
*.sink[0].mobility.initialY = 35m

*.host[*].numApps = 1
*.host[*].app[0].destAddresses = "sink[0]"
*.host[*].app[0].startTime = uniform(60s, 100s)
*.host[*].app[0].sendInterval = uniform(1s, 2s)

*.sink[0].app[0].typename = "UdpSink"
*.sink[0].app[0].startTime = 60s

**.sf.upperCellUsageLimit = 0.7 # MSF adds cells if cell utilization exceeds this threshold

# experimental feature to add random delays in uniform(1s, 5s) range tp each outgoing 6P packet
# to reduce contention 
**.sf.send6pDelayed = true 


[Config HPQ]
network = HighDensity
repeat = 10
sim-time-limit = 600s
#warmup-period = 400s
**.queueUtilization.result-recording-modes = vector, mean

include waic_radio.ini
**.radio.transmitter.power = 0.00001mW

**.daoEnabled = false
**.minHopRankIncrease = 2

*.numHosts = ${numHosts = 25, 50}
*.numSinks = 1

**.queueLength = ${queueLen = 20, 50, 200}

# MSF params
**.sf.maxNumCells = intuniform(60, 80)
**.sf.queueEstimationPeriod = uniform(10s, 20s)
**.sf.showTxCellCount = true
**.sf.showQueueUtilization = false
**.sf.send6pDelayed = false
**.sf.showDedicatedTxCells = false
**.sf.upperCellUsageLimit = 0.95 # add cells only when utilization is really high
**.sf.lowerCellUsageLimit = -1 # do not remove cells 

# Topology (aircraft seats imitation)
include seatbelts_layout.ini

## Apps
**.numApps = 3

*.sink[*].app[*].typename = "UdpSink"
*.sink[*].app[*].localPort = 1000 + index()
*.sink[*].app[*].startTime = ${startTime = 150}s

*.host[*].app[*].typename = "TschUdpBasicApp"
*.host[*].app[*].destPort = 1000 + index()
*.host[*].app[*].destAddresses = "sink[0](ipv6)"
*.host[*].app[*].messageLength = 50B

# Seatbelt status
*.host[*].app[0].sendInterval = exponential(5s)
*.host[*].app[0].VirtualLinkID = 1 # low prio
*.host[*].app[0].startTime = ${hostStartTime = uniform($startTime, $startTime + 10)} * 1s

# Smoke
*.host[*].app[1].sendInterval = exponential(1s)
*.host[*].app[1].VirtualLinkID = -1 # highest prio

# only these nodes have smoke sensors active
#*.host[1].app[1].startTime = ${hostStartTime}
*.host[4].app[1].startTime = ${smokeStart = $hostStartTime * 2} * 1s
#*.host[7].app[1].startTime = ${hostStartTime}
*.host[10].app[1].startTime = ${smokeStart}s
#*.host[13].app[1].startTime = ${hostStartTime}
*.host[16].app[1].startTime = ${smokeStart}s
#*.host[19].app[1].startTime = ${hostStartTime}
*.host[22].app[1].startTime = ${smokeStart}s
#*.host[25].app[1].startTime = ${hostStartTime}
*.host[28].app[1].startTime = ${smokeStart}s
#*.host[31].app[1].startTime = ${hostStartTime}
*.host[34].app[1].startTime = ${smokeStart}s
#*.host[37].app[1].startTime = ${hostStartTime}
*.host[40].app[1].startTime = ${smokeStart}s
#*.host[43].app[1].startTime = ${hostStartTime}
#*.host[49].app[1].startTime = ${hostStartTime}
*.host[46].app[1].startTime = ${smokeStart}s
*.host[*].app[1].stopTime = this.startTime + 120s # let bursty smoke traffic run for 2 min


# Humidity
*.host[*].app[2].sendInterval = 2.5s
*.host[*].app[2].VirtualLinkID = 0 # normal prio

# only these nodes have humidity monitoring active
#*.host[0].app[2].startTime = ${startTime}
#*.host[6].app[2].startTime = ${startTime}
#*.host[12].app[2].startTime = ${startTime}
#*.host[21].app[2].startTime = ${startTime}
#*.host[26].app[2].startTime = ${startTime}
#*.host[32].app[2].startTime = ${startTime}
#*.host[38].app[2].startTime = ${startTime}
#*.host[44].app[2].startTime = ${startTime}

*.host[13].app[2].startTime = ${startTime}s
*.host[37].app[2].startTime = ${startTime}s
*.host[19].app[2].startTime = ${startTime}s
*.host[43].app[2].startTime = ${startTime}s
*.host[7].app[2].startTime = ${startTime}s
*.host[31].app[2].startTime = ${startTime}s
*.host[1].app[2].startTime = ${startTime}s
*.host[25].app[2].startTime = ${startTime}s

# disable smoke and humidity sensors on all other nodes
*.host[*].app[1].startTime = 20h 
*.host[*].app[2].startTime = 20h

[Config HPQ_Off]
extends = HPQ
#**.queueLength = ${queueLen} * 3  # because each priority has its own queue and now they're combined
*.host[*].app[0].VirtualLinkID = 0
*.host[*].app[1].VirtualLinkID = 0
*.host[*].app[2].VirtualLinkID = 0






 