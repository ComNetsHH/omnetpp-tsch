[General]
num-rngs = 10
check-signals = false # remove this and change modules accordingly
*.cmdenv-log-level=detail
**.result-recording-modes=default,-histogram
**.mobility.rng-0 = 1
**.wlan[*].mac.rng-0 = 7

include common.ini
include delay_testing.ini
#include avionic.ini

**.sf.timeout = 35000ms
**.macMaxBE = 5 # maximum backoff exponent should correspond to the SF timeout value

[Config HPQ]
network = HighDensity
repeat = 35
sim-time-limit = ${simLimit=800s}
warmup-period = ${warmup=500s}

*.numHosts = ${hosts = 50, 200}
*.numSinks = ${sinks = 1..5}

result-dir = HPQ 
output-vector-file = "${resultdir}/${configname}-hosts=${hosts}-sinks=${sinks}-${runnumber}.vec"
output-scalar-file = "${resultdir}/${configname}-hosts=${hosts}-sinks=${sinks}-${runnumber}.sca"

eventlog-file = "${resultdir}/${configname}-hosts=${hosts}-sinks=${sinks}#${repetition}.elog"
snapshot-file = "${resultdir}/${configname}-hosts=${hosts}-sinks=${sinks}#${repetition}.sna"
cmdenv-output-file = "${resultdir}/${configname}-hosts=${hosts}-sinks=${sinks}#${repetition}.out"
measurement-label = "hosts=${hosts}-sinks=${sinks}"

#**.app**.statistic-recording = true
#**.statistic-recording = false

**.radioModeFilter = true
**.listeningFilter = true
**.macAddressFilter = true

#**.radio.transmitter.power = 0.000073mW 

include waic_radio.ini

**.wrrEnabled = true
**.daoEnabled = false

**.rpl.minHopRankIncrease = 2 # speed up topology convergence

# disable Ipv6 clutter
**.ipv6.neighbourDiscovery.raEnabled = false
**.ipv6.neighbourDiscovery.skipDad = true
**.ipv6.neighbourDiscovery.addRandomDelays = true

# Ensure reliable and robust connectivity
**.channelHopping.useRandomPattern = true
**.sf.minCellChannelOffset = 39 # highest frequency for DIOs ensures reliable parent selection
**.sf.checkScheduleConsistency = false # to speed up the simulation a bit

# MSF params	
**.sf.numMinCells = 10
**.sf.maxNumCells = 100 # intuniform(10, 15)
**.sf.upperCellUsageLimit = 0.75
**.sf.lowerCellUsageLimit = 0.25
**.sf.disableHousekeeping = true
**.sf.showTxCellCount = true
**.sf.timeout = 60000ms
**.sf.maxNumCellsScalingFactor = 4 # recommended by RFC 9033
**.sf.allowAutoCellDeletion = false # to free up the schedule around sink by deleting redundant neighbors' auto cells 

include seatbelts_layout.ini

**.mobility.rotateHorizontally = false

## Apps
**.numApps = 3

*.sink[*].app[*].typename = "UdpSink"
*.sink[*].app[*].localPort = 1000 + index()
*.sink[*].app[*].startTime = ${startTime = 100}s 

*.host[*].app[*].typename = "TschUdpBasicApp"
*.host[*].app[*].destPort = 1000 + index()
*.host[*].app[*].messageLength = 50B

# Seatbelt status
*.host[*].app[0].virtualLinkId = 0 # normal prio
*.host[*].app[0].packetName = "SeatbeltApp"
*.host[*].app[0].startTime = uniform(${startTime}, ${startTime} + 10) * 1s
 
# Smoke
*.host[*].app[1].virtualLinkId = -1 # high prio
*.host[*].app[1].sendInterval = 2s
*.host[*].app[1].stopTime = this.startTime + this.sendInterval # one smoke alarm event per simulation 
*.host[*].app[1].packetName = "SmokeAlarmApp"

# Humidity
*.host[*].app[2].virtualLinkId = 1 # low prio
*.host[*].app[2].packetName = "HumidityApp"

# uncomment depending on the $numNodes param
#include hpq_50.ini
include hpq_200.ini

# disable smoke and humidity sensors on all other nodes
*.host[*].app[1].startTime = 20h
*.host[*].app[2].startTime = 20h


[Config HPQ_Off]
extends = HPQ
*.host[*].app[0].virtualLinkId = 0
*.host[*].app[1].virtualLinkId = 0
*.host[*].app[2].virtualLinkId = 0 

[Config _HPQ_Model_Verification]
network = HighDensity
warmup-period = 200s
sim-time-limit = ${simLimit = 2000s}
repeat = 50

**.sf.upperCellUsageLimit = 1.1
**.sf.lowerCellUsageLimit = -1

**.app[*].startTime = uniform(20s, 22s)
**.numApps = 3
*.sink[*].app[*].typename = "UdpSink"
*.sink[*].app[*].localPort = 1000 + index()

*.host[*].app[*].destPort = 1000 + index()
*.host[*].app[*].typename = "TschUdpBasicApp"
*.host[*].app[*].messageLength = 50B

*.host[*].app[0].virtualLinkId = -1
*.host[*].app[1].virtualLinkId = 0
*.host[*].app[2].virtualLinkId = 1

**.sf.disableHousekeeping = true
**.queueLength = 20000
**.wrrEnabled = true
**.daoEnabled = false
**.macMaxFrameRetries = 0

*.sink[0].mobility.initialX = 3m
*.sink[0].mobility.initialY = 3m
*.host[0].mobility.initialX = 4m
*.host[0].mobility.initialY = 3m
**.constraintAreaMaxX = 10m
**.constraintAreaMaxY = 10m

[Config HPQ_Model_Verification_All_Queues]
extends = _HPQ_Model_Verification
result-dir = hpq_verif
*.host[*].app[*].sendInterval = exponential(1 / ${rate = 0.05..0.3 step 0.05} * 1s)

[Config HPQ_Model_Verification_2_Queues]
extends = HPQ_Model_Verification_All_Queues
result-dir = hpq_verif_2_queues
**.app[2].startTime = 20h

[Config HPQ_Model_Verification_WRR_Effect]
extends = _HPQ_Model_Verification
result-dir = hpq_verif_wrr_effect
**.wrrWeigthBe = ${wrrBe = 1..3 step 1}
**.wrrWeigthNp = ${wrrNp = 4}

**.host[*].app[1].stopTime = ${simLimit} - 50s
**.host[*].app[2].stopTime = ${simLimit} - 50s

**.app[0].startTime = 20h
**.app[0].sendInterval = 20h
**.app[1].sendInterval = exponential((${wrrNp} + ${wrrBe})/${wrrNp} * 1s) # 4 - weight of NP traffic
**.app[2].sendInterval = exponential(1 / ${rateBe = 0.05..0.5 step 0.05} * 1s)

[Config HPQ_Model_Verification_WRR_NP_effect]
extends = _HPQ_Model_Verification
result-dir = hpq_verif_wrr_np_effect
**.app[0].startTime = 20h
**.app[0].sendInterval = 20h
**.app[1].sendInterval = exponential(1 / ${rateNp = 0.2, 0.4, 0.6} * 1s)
**.app[2].sendInterval = exponential(1 / ${rateBe = 0.05..0.4 step 0.05} * 1s)

[Config ReSA]
network = ReSA
repeat = 40
sim-time-limit = ${simtime = 3000}s
warmup-period = ${warmup = 1000}s
#result-dir = ReSA  
result-dir = ReSA_ISM # uncomment this, if no waic_radio.ini is included
**.vector-recording = true
**.app**.result-recording-modes= default
**.mac**.result-recording-modes= default
**.result-recording-modes= -

**.numDaoRetransmitAttempts = 20 # crucial to ensure that a sink can route packets downwards

include ReSA.ini
#include waic_radio.ini

**.ipv6.neighbourDiscovery.raEnabled = false
**.ipv6.neighbourDiscovery.skipDad = true
**.ipv6.neighbourDiscovery.addRandomDelays = true

**.sf.timeout = 60000ms # tricky, should be best set dynamically

# To disable channel hopping
#**.channelHopping.pattern = "1"
#**.channelHopping.useRandomPattern = false

**.channelHopping.useRandomPattern = true
**.sf.minCellChannelOffset = 39 # highest frequency for DIOs ensures reliable parent selection

#**.mac.ignoreBitErrors = false # TODO: causes more problems than it solves
#**.sf.downlinkDedicated = true

**.gw*.rpl.startDelay = 10
**.nsForwardingDelay = 1s # solves extreme congestion during IPv6 neighbour discovery  

# no need for DAOs except from the destinations we're routing to - analytic modules
# AND the sources of important data - smoke alarms  
*.am*[*].rpl.daoEnabled = true
#*.sos*[*].rpl.daoEnabled = true

# force nodes to continuously retry uplink cell scheduling
#**sos**.sf.scheduleUplinkManually = true

**.daoEnabled = false

*.sos*[*].app[0].startTime = uniform(${warmup}s + 200s, ${simtime}s - 500s)
*.sos*[*].app[0].sendInterval = ${simtime}s

**.app[*].startTime = uniform(${warmup} - 1, ${warmup}) * 1s

*.sos*[*].app[0].startTime.param-record-as-scalar = true

[Config ReSA_Downlink_Optimization]
extends = ReSA
#**.sf.lowerCellUsageLimit = -1 # avoid removing specially provisioned downlink cells
**am**.rpl.downlinkRequired = true

[Config ReSA_Cell_Bundling]
extends = ReSA-Altimeter
**.sf.cellBundlingEnabled = true
**.sf.lowerCellUsageLimit = -1 # avoid removing bundling cell pairs

[Config ReSA_Cell_Bundling_Dynamic]
extends = ReSA-Altimeter
**.sos*.rpl.uplinkRequired = true
**.sos*.**.sf.cellBundlingEnabled = true
**.sf.handleCellBundlingSignal = true

[Config ReSA_Ultimate_ISM]
extends = ReSA-HPQ
**sos**.sf.scheduleUplinkManually = true
**.sos*.rpl.daoEnabled = true
#**.sos*.**.sf.cellBundlingEnabled = true
#**.sf.cellBundleSize = 1
#**.sf.handleCellBundlingSignal = true

[Config ReSA_Cell_Bundling_Dynamic_Daisy_Chained]
extends = ReSA_Cell_Bundling_Dynamic, ReSA-Low-Latency

[Config ReSA_Cell_Bundling_Dynamic_Daisy_Chained_Uplink]
extends = ReSA-Altimeter-Uplink
**.sos*.rpl.uplinkRequired = true
**.sos*.**.sf.cellBundlingEnabled = true
**.sf.handleCellBundlingSignal = true
**.lowLatencyMode = true

[Config ReSA_Altimeter_Low_Latency_Uplink]
extends = ReSA-Altimeter-Uplink
**.lowLatencyMode = true

[Config ReSA_Cell_Bundling_Uplink]
extends = ReSA-Altimeter-Uplink
**.sf.cellBundlingEnabled = true
**.sf.lowerCellUsageLimit = -1 # avoid removing bundling cell pairs

[Config ReSA_Cell_Bundling_Dynamic_Uplink]
extends = ReSA-Altimeter-Uplink
result-dir = ReSA_Cell_Bundling_Dynamic_Uplink
**.sos*.rpl.uplinkRequired = true
**.sos*.**.sf.cellBundlingEnabled = true
**.sf.handleCellBundlingSignal = true

[Config ReSA_Cell_Bundling-2]
extends = ReSA-Altimeter-Uplink-2

[Config ReSA_CSMA]
extends = ReSA
**.wlan[*].typename = "Ieee802154NarrowbandInterface"
**.wlan[*].mac.typename = "Ieee802154NarrowbandMac"
**.radioMedium.typename = "Ieee802154NarrowbandDimensionalRadioMedium"

[Config ReSA-CLX]
extends = ReSA
result-dir=ReSA-CLX
**.sf.typename = "TschCLSF"
**.rpl.crossLayerEnabled = true
**.rpl.clPhase2Timeout = ${warmup} - 200

**.rpl.sinkNeighborWeight = 1.5

[Config ReSA-HPQ]
extends = ReSA
*.gw*[*].app[0].virtualLinkId = -2
*.sos*[*].app[0].virtualLinkId = -2

[Config ReSA-Low-Latency]
extends = ReSA
**.lowLatencyMode = true

[Config ReSA_Low_Latency_Downlink_Optimization]
extends = ReSA_Downlink_Optimization, ReSA-Low-Latency

[Config ReSA_Ultimate]
extends = ReSA_Downlink_Optimization, ReSA-Low-Latency, ReSA-HPQ

[Config ReSA_Ultimate_Dynamic_Cell_Bundling]
extends = ReSA_Downlink_Optimization, ReSA-Low-Latency, ReSA-HPQ, ReSA_Cell_Bundling_Dynamic

[Config ReSA_Ultimate_Dynamic_Cell_Bundling_2]
extends = ReSA_Ultimate_Dynamic_Cell_Bundling
**.macSlotframeSize = 53

[Config ReSA_Ultimate_Cell_Bundling]
extends = ReSA_Cell_Bundling, ReSA_Downlink_Optimization, ReSA-HPQ

[Config ReSA-Low-Latency-HPQ]
extends = ReSA-Low-Latency, ReSA-HPQ

## EXTRA PARAMS ONLY FOR ISM BAND
#**.lowLatencyStartingOffset = 10
#**sos**.sf.scheduleUplinkManually = true # to ensure dedicated cell
#**sos**.sf.blacklistSlots = true # to avoid blind guessing of available slot offsets at the parent

[Config ReSA-Uplink]
extends = ReSA
result-dir= ReSA_Uplink

*.gw*[*].app[0].typename = "UdpSink"
*.sos*[*].app[0].typename = "TschUdpBasicApp"

[Config ReSA-Uplink-HPQ]
extends = ReSA-Uplink, ReSA-HPQ

[Config ReSA-Uplink-HPQ-Low-Latency]
extends = ReSA-Uplink, ReSA-HPQ
**.lowLatencyMode = true

[Config ReSA-Uplink-CLX]
extends = ReSA-Uplink, ReSA-CLX

[Config ReSA-No-Random-Delays]
extends = ReSA-HPQ
result-dir = ReSA-No-Random-Delays

**.nsForwardingDelay = 0
**.ipv6.neighbourDiscovery.addRandomDelays = false

[Config ReSA-No-Random-Delays-CLX]
extends = ReSA-CLX

result-dir = ReSA-No-Random-Delays

**.nsForwardingDelay = 0
**.ipv6.neighbourDiscovery.addRandomDelays = false

*.gw*[*].app[0].virtualLinkId = -2
*.sos*[*].app[0].virtualLinkId = -2

[Config ReSA_Seatbelts]
extends = ReSA
result-dir = ReSA_Seatbelts

**.numHosts = ${hosts = 100} # number of seatbelts, should always come before seatbelts_layout.ini
**.numSinks = ${sinks = 1} # dummy variable required for compatibility with how HPQ uses seat belt layout

output-vector-file = "${resultdir}/${configname}-hosts=${hosts}-sinks=${sinks}-${runnumber}.vec"
output-scalar-file = "${resultdir}/${configname}-hosts=${hosts}-sinks=${sinks}-${runnumber}.sca"
eventlog-file = "${resultdir}/${configname}-hosts=${hosts}-sinks=${sinks}#${repetition}.elog"
snapshot-file = "${resultdir}/${configname}-hosts=${hosts}-sinks=${sinks}#${repetition}.sna"
cmdenv-output-file = "${resultdir}/${configname}-hosts=${hosts}-sinks=${sinks}#${repetition}.out"
measurement-label = "hosts=${hosts}-sinks=${sinks}"

include seatbelts_layout.ini
include seatbelts_app.ini

# setting to false speeds up the simulation, 
# but it's also worth running all repetitions at least once with "true"
**.checkScheduleConsistency = false

# to free up the space for dedicated cell scheduling, use cautiously has considerable drawbacks
#**.allowAutoCellDeletion = true

*.host[*].**.sf.scheduleUplinkOnJoin = false # free up scheduling bandwidth near the sink

**sos**.sf.scheduleUplinkManually = true # to ensure repeated attempts at dedicated cell scheduling
**sos**.sf.blacklistSlots = true # to avoid blind guessing of available slot offsets at the parent

[Config ReSA_CSMA_Seatbelts]
extends = ReSA_CSMA, ReSA_Seatbelts

[Config ReSA_Seatbelts_Uplink]
extends = ReSA_Seatbelts, ReSA-Uplink
result-dir = ReSA_Seatbelts_Uplink

[Config ReSA_Seatbelts_HPQ]
extends = ReSA_Seatbelts, ReSA-HPQ

[Config ReSA_Seatbelts_HPQ_Uplink]
extends = ReSA_Seatbelts_Uplink, ReSA-HPQ

[Config ReSA_Seatbelts_Infq]
extends = ReSA_Seatbelts
result-dir = ReSA_Seatbelt_Inf_Queue
**.queueLength = 9000

[Config ReSA_Seatbelts_Infq_HPQ]
result-dir = ReSA_Seatbelt_Inf_Queue
extends = ReSA_Seatbelts_Infq, ReSA-HPQ

[Config ReSA_Seatbelts_Infq_Uplink]
extends = ReSA_Seatbelts_Infq, ReSA-Uplink

[Config ReSA_Seatbelts_Infq_Uplink_HPQ]
extends = ReSA_Seatbelts_Infq_HPQ, ReSA-Uplink

[Config ReSA-Altimeter]
extends = ReSA

# ensure proper directory name based on the chirp period
**.T_chirp = ${tChirp = 0.02}
result-dir = ReSA_altimeter_T_20_ms

**.radioMedium.analogModel.typename = "WaicDimensionalAnalogModel"
**.RA_OffSet="0.00s"
# based on the info from LHT: two altimeters relatively close to each other at the front
**.AltimeterLocations="(7.62, 1.4, 5.4)m (8.13, 1.4, 5.4)m"
**.f_chirp_max = 4300.0e6

**sos**.sf.scheduleUplinkManually = true # to ensure dedicated cell
**sos**.sf.blacklistSlots = true # to avoid blind guessing of available slot offsets at the parent

#**.lowLatencyStartingOffset = 1 # only for ISM band, otherwise low-latency mode has not enough bandwidth

[Config ReSA_Ultimate_Altimeter]
extends = ReSA-Altimeter, ReSA_Ultimate

[Config ReSA_Ultimate_Altimeter_2]
extends = ReSA_Ultimate_Altimeter
**.macSlotframeSize = 53

[Config ReSA-Altimeter-2]
extends = ReSA-Altimeter
**.RA_OffSet="0.01s"

[Config ReSA-Altimeter-Uplink]
extends = ReSA-Altimeter, ReSA-Uplink

[Config ReSA-Altimeter-Uplink-2]
extends = ReSA-Altimeter-2, ReSA-Uplink

[Config ReSA-Altimeter-Low-Latency-HPQ]
extends = ReSA-Altimeter, ReSA-HPQ
**.lowLatencyMode = true

[Config ReSA-Altimeter-Uplink-Low-Latency-HPQ]
extends = ReSA-Altimeter-Low-Latency-HPQ, ReSA-Uplink

[Config ReSA-Altimeter-Seatbelts]
extends = ReSA_Seatbelts, ReSA-Altimeter

[Config ReSA-Low-Latency-Seatbelts]
extends = ReSA_Seatbelts, ReSA-Low-Latency

**.minHopRankIncrease = 10 # disabled parent changing for better traceability
*.host[*].**.sf.scheduleUplinkOnJoin = false # free up some bandwidth near the sink

[Config ReSA-Low-Latency-Uplink]
extends = ReSA-Uplink, ReSA-Low-Latency

[Config ReSA_Seatbelts_Uplink_Low_Latency]
extends = ReSA-Low-Latency-Seatbelts, ReSA-Uplink

# TODO: buggy
#[Config ReSA-Altimeter-Dowlink-Dedicated]
#extends = ReSA-Altimeter
#**.sf.downlinkDedicated = true
#
#[Config ReSA-Altimeter-Low-Latency-HPQ-Downlink-Dedicated]
#extends = ReSA-Altimeter-Dowlink-Dedicated, ReSA-Altimeter-Low-Latency-HPQ











