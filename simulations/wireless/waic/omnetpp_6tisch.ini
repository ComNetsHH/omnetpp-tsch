[General]
network = WaicBasicRpl
num-rngs = 3
check-signals = false # remove this and change modules accordingly
*.cmdenv-log-level=detail
**.mobility.rng-0 = 1
**.wlan[*].mac.rng-0 = 1

# PHY
*.radioMedium.typename = "Ieee802154NarrowbandDimensionalRadioMedium"
**.analogModel.typename = "DimensionalAnalogModel"

**.backgroundNoise.typename = "IsotropicDimensionalBackgroundNoiseWaic"
**.signalAnalogRepresentation = "dimensional"
*.radioMedium.radioModeFilter = false
**.dimensions = "time frequency"
**.backgroundNoise.power = -110dBm

*.sink.wlan[*].radio.typename = "Ieee802154NarrowbandDimensionalRadio"
*.sink.wlan[*].radio.carrierFrequency = 2.412GHz
*.host*.wlan[*].radio.typename = "Ieee802154NarrowbandDimensionalRadio"
*.host*.wlan[*].radio.carrierFrequency = 2.412GHz
*.host[*].wlan[*].radio.typename = "Ieee802154NarrowbandDimensionalRadio"
*.host[*].wlan[*].radio.carrierFrequency = 2.412GHz

# MAC
*.sink.wlan[*].typename = "WirelessInterface"
*.sink.wlan[*].mac.typename = "Ieee802154eInterface"
*.host[*].wlan[*].typename = "WirelessInterface"
*.host[*].wlan[*].mac.typename = "Ieee802154eInterface"
*.host*.wlan[*].typename = "WirelessInterface"
*.host*.wlan[*].mac.typename = "Ieee802154eInterface"

# mobility
**.host[*].mobility.typename = "StationaryMobility"
**.host*.mobility.typename = "StationaryMobility"
**.sink.mobility.typename = "StationaryMobility"
**.host*.mobility.initFromDisplayString = true
**.sink.mobility.initFromDisplayString = true
*.host*.mobility.cmdenv-log-level=error

# IP config
**.hasIpv6 = true
**.hasIpv4 = false
**.hasGn = false
**.ipv6.allowLinkLocalFwd = true			# custom, non-INET parameter, requires modified ipv6 src file,
											# enables nodes to forward UDP packets using link-local addresses

#**.ipv6.enableTargetExclusiveNAs = true	# custom, non-INET parameter, requires modified ipv6 src file
**.mtu = 1500B
**.neighbourDiscovery.minIntervalBetweenRAs = 0.3s # to mitigate endless loops in IPv6 ND
**.neighbourDiscovery.maxIntervalBetweenRAs = 0.7s # to mitigate endless loops in IPv6 ND
#**.neighbourDiscovery.addRandomDelays = true # custom, non-INET parameter, requires modified ipv6 src file 
 											  # to mitigate endless loops in IPv6 ND 

# 6TiSCH
**.nbRadioChannels = 16
**.macSlotframeSize = 101
**.mac.mac.interfaceTableModule = ""

**.sixtischInterface.sf.typename = "TschMSF"
**.sfid = "TschMSF"
**.sf.startTime = 3s
**.sf.maxNumCells = 10 # was 15
**.sf.lowerCellUsageLimit = 0.1
**.sf.numMinCells = 5
**.sf.cellBandwidthIncrement = 2
**.sf.allowCellRemoval = true
**.sf.clearReservedCellsTimeout = 30

# RPL settings
**.sink.rpl.isRoot = true
**.sink.rpl.storing = true
**.sink.rpl.numSkipTrickleIntervalUpdates = 5 # for faster topology convergence
**.rpl.daoEnabled = true
**.rpl.daoAckEnabled = true
**.rpl.assignParentManual = false
**.rpl.disableParentSwitching = false # currently MSF doesn't handle parent switching
**.rpl.unreachabilityDetectionEnabled = false
**.rpl.networkProtocolModule = "^.ipv6.ipv6"
**.rpl.routingTableModule = "^.ipv6.routingTable"

# Common app settings
**.app[0].destPort = 2000
**.app[0].messageLength = 50B
#**.app[0].startTime = uniform(150s, 160s) 
**.app[0].startTime = uniform(300s, 320s)
*.host*.app[0].typename = "UdpBasicApp"
*.host*.app[0].destAddresses = "sink(ipv6)"
*.host[*].app[0].typename = "UdpBasicApp"
*.host[*].app[0].destAddresses = "sink(ipv6)"

*.sink.numApps = 1
*.sink.app[0].typename = "UdpSink"
*.sink.app[*].localPort = 2000

[Config Basic6TiSCH]
**.app[0].startTime = uniform(20s, 30s)
**.app[0].sendInterval = uniform(1s, 2s)
**.sink.rpl.numSkipTrickleIntervalUpdates = 0
**.host*.rpl.assignParentManual = true  # for cleaner topology
**.host5.numApps = 1

[Config Mobility]
extends = Basic6TiSCH
**.host5.**.speed = 2mps
**.host5.**.initialMovementHeading = 90deg

[Config Branches]
network = Branches
# UDP
**.host{1, 5, 9}.rpl.allowJoinAtSink = true
**.host{1, 2, 3, 5, 6, 7, 9}.rpl.assignParentManual = true
**.host10.rpl.assignParentManual = true
**.host11.rpl.assignParentManual = true

**.app[0].sendInterval = uniform${traffic=(1s, 2s), (20s, 30s)}

# 2 hops
*.host{2, 6,}.numApps = ${hops=1, 0, 0, 0, 0, 0, 0, 0, 0}
*.host10.numApps = ${1, 0, 0, 0, 0, 0, 0, 0, 0 ! hops}
# 3 hops
*.host{3, 7}.numApps = ${0, 1, 0, 0, 0, 0, 0, 0, 0 !hops}
*.host11.numApps = ${0, 1, 0, 0, 0, 0, 0, 0, 0 !hops}
# 4 hops
*.host{4, 8}.numApps = ${0, 0, 1, 0, 0, 0, 0, 0, 0 !hops}
*.host12.numApps = ${0, 0, 1, 0, 0, 0, 0, 0, 0 !hops}

*.host{13..15}.numApps = ${0, 0, 0, 1, 0, 0, 0, 0, 0 !hops} # 5 hops
*.host{16..18}.numApps = ${0, 0, 0, 0, 1, 0, 0, 0, 0 !hops} # 6 hops
*.host{19..21}.numApps = ${0, 0, 0, 0, 0, 1, 0, 0, 0 !hops} # 7 hops
*.host{22..24}.numApps = ${0, 0, 0, 0, 0, 0, 1, 0, 0 !hops} # 8 hops
*.host{25..27}.numApps = ${0, 0, 0, 0, 0, 0, 0, 1, 0 !hops} # 9 hops
*.host{28..30}.numApps = ${0, 0, 0, 0, 0, 0, 0, 0, 1 !hops} # 10 hops

*.host99.numApps = ${hopCount=2..10 ! hops} # dummy parameter to store hops counter
*.host98.numApps = ${trafficType=1, 0 ! traffic} # dummy parameter to filter high/low traffic intensity in run query
measurement-label = ${"hops=${hopCount}"}
experiment-label = ${SmokeAlarm, HumidityMonitoring ! traffic}


