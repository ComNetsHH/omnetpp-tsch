########################################################################################################################################################################
#######################################################################  	LAYOUT SETTINGS		########################################################################
########################################################################################################################################################################

**.mobility.initFromDisplayString = false # ignore displayString positions

# User layout settings
*.sink[*].mobility.constraintAreaMinX = ${minX = 0m}
*.sink[*].mobility.constraintAreaMaxX = 34m

*.user*[*].mobility.typename = "FlexibleGridMobility"
*.user*[*].mobility.numHosts = ${usersPerGroup = int(${numUsers} / 2)}
*.user*[*].mobility.columns = ${cols = 3}
*.user*[*].mobility.marginX = 0
*.user*[*].mobility.marginY = 0
*.user*[*].mobility.separationX = ${sepX = 0.496m}
*.user*[*].mobility.separationY = ${sepY = 0.737m}

*.user*[*].mobility.resetRowAtNodeIndex = ${usersPerGroup}

*.user*[*].mobility.constraintAreaMinX = parentIndex() <  ${numUsers} / 2 ? ${minX} : (${minX} + ${sepX} * (${cols} + 1))
*.user*[*].mobility.constraintAreaMaxX = this.constraintAreaMinX + 0.5m * ${cols}

*.user*[*].mobility.constraintAreaMinY = 2m
*.user*[*].mobility.constraintAreaMaxY = this.constraintAreaMinY + ${sepY} * (${numUsers} / 2 / ${cols})

*.sink[*].mobility.constraintAreaMinY = 2m
*.sink[*].mobility.constraintAreaMaxY = this.constraintAreaMinY + ${sepY} * (${numUsers} / 2 / ${cols})

*.sink[0].mobility.initialX = this.constraintAreaMinX + ${sepX} * ${cols}
*.sink[0].mobility.initialY = this.constraintAreaMinY + ${sepY} * int(${numUsers} / 2 / ${cols}) / 2

*.user1[*].mobility.gridOffsetX = -2.35
*.user1[*].mobility.gridOffsetY = 0.95

*.user2[*].mobility.gridOffsetX = -2.35
*.user2[*].mobility.gridOffsetY = 0.95 + 40.4

*.user3[*].mobility.gridOffsetX = -2.35
*.user3[*].mobility.gridOffsetY = 0.95 + 80.8

*.user4[*].mobility.gridOffsetX = -2.35 + 60.47
*.user4[*].mobility.gridOffsetY = 0.95 + 20.49

#*.user*[*].mobility.typename = "StationaryMobility"
#*.user*[*].mobility.constraintAreaMaxX = 2000m
#*.user*[*].mobility.constraintAreaMaxY = 2000m
#*.user*[*].mobility.constraintAreaMaxZ = 5m
#*.user*[*].mobility.constraintAreaMinX = 0m
#*.user*[*].mobility.constraintAreaMinY = 0m
#*.user*[*].mobility.constraintAreaMinZ = 0m
##*.user*[*].mobility.initialX = ${x1offset} + parentIndex() * 2*6.84m + 3m # very close to gateway
##*.user*[*].mobility.initialY = ${y1offset} + 0.5m
##*.user*[*].mobility.initialZ = 3.82m 

# server layout
*.server*.mobility.typename = "StationaryMobility"
*.server*.mobility.constraintAreaMaxX = 1000m
*.server*.mobility.constraintAreaMaxY = 1000m
*.server*.mobility.constraintAreaMaxZ = 5m

*.server1.mobility.initialX = ${x1offset} + 18m # very close to gateway
*.server1.mobility.initialY = ${y1offset} + 1.69m	
*.server1.mobility.initialZ = 3.82m 

*.server2.mobility.initialX = ${x1offset} + 18m 
*.server2.mobility.initialY = ${y1offset} + 1.69m + 40.4m
*.server2.mobility.initialZ = 3.82m 

*.server3.mobility.initialX = ${x1offset} + 18m
*.server3.mobility.initialY = ${y1offset} + 1.69m + 80.8m	
*.server3.mobility.initialZ = 3.82m 

*.server4.mobility.initialX = ${x1offset} + 18m + 60.47m
*.server4.mobility.initialY = ${y1offset} + 1.69m + 20.49m 
*.server4.mobility.initialZ = 3.82m 

# access point layout
*.ap*[*].mobility.typename = "StationaryMobility"
*.ap*[*].mobility.constraintAreaMaxX = 1000m
*.ap*[*].mobility.constraintAreaMaxY = 1000m
*.ap*[*].mobility.constraintAreaMaxZ = 5m

*.ap1[*].mobility.initialX = ${x1offset} + 6.84m + parentIndex()*8m # x offset of the aircraft1 + offset from the front most node
*.ap1[*].mobility.initialY = ${y1offset} + 1.69m
*.ap1[*].mobility.initialZ = 3.82m

*.ap2[*].mobility.initialX = ${x1offset} + 6.84m + parentIndex()*8m 
*.ap2[*].mobility.initialY = ${y1offset} + 1.69m + 40.4m
*.ap2[*].mobility.initialZ = 3.82m

*.ap3[*].mobility.initialX = ${x1offset} + 6.84m + parentIndex()*8m
*.ap3[*].mobility.initialY = ${y1offset} + 1.69m + 80.8m
*.ap3[*].mobility.initialZ = 3.82m

*.ap4[*].mobility.initialX = ${x1offset} + 6.84m + parentIndex()*8m + 60.47m 
*.ap4[*].mobility.initialY = ${y1offset} + 1.69m + 20.49m 
*.ap4[*].mobility.initialZ = 3.82m

########################################################################################################################################################################
#######################################################################  	RADIO SETTINGS		########################################################################
########################################################################################################################################################################

**.backgroundNoise.power = nan
*.radioMedium.backgroundNoise.powerSpectralDensity = -113dBmWpMHz

# NIC settings
*.user*[*].wlan[*].typename = "Ieee80211Interface"
*.user*[*].wlan[*].mac.typename = "Ieee80211Mac"
*.user*[*].wlan[*].radio.typename = "Ieee80211DimensionalRadio"
*.user*[*].wlan[*].radio.channelNumber = 0
*.user*[*].wlan[*].mgmt.numChannels = 14

*.ap*[*].wlan[*].typename = "Ieee80211Interface"
*.ap*[*].wlan[*].mac.typename = "Ieee80211Mac"
*.ap*[*].wlan[*].radio.typename = "Ieee80211DimensionalRadio"
*.ap*[0].wlan[*].radio.channelNumber = 0
*.ap*[1].wlan[*].radio.channelNumber = 5
*.ap*[2].wlan[*].radio.channelNumber = 10

# AP transmission powers according to project input
*.ap*[0].wlan[*].radio.transmitter.power = 0.0079W
*.ap*[1].wlan[*].radio.transmitter.power = 0.002W
*.ap*[2].wlan[*].radio.transmitter.power = 0.002W
*.ap*[*].wlan[*].radio.receiver.sensitivity = -85dBm
*.ap*[*].wlan[*].radio.receiver.energyDetection = -85dBm
*.ap*[*].wlan[*].radio.receiver.snirThreshold = 4dB

*.user*[*].wlan[*].radio.transmitter.power = 0.02W
*.user*[*].radio.receiver.sensitivity = -85dBm
*.user*[*].radio.receiver.energyDetection = -85dBm
*.user*[*].radio.receiver.snirThreshold = 4dB

**.wlan[*].radio.receiver.snirThresholdMode = "mean"
**.wlan[*].radio.receiver.errorModel.snirMode = "mean"

*.user*[*].wlan[*].radio.transmitter.preambleDuration = 6us
*.ap*[*].wlan[*].radio.transmitter.preambleDuration = 6us

# set freq. gains for WiFi modules
*.user*[*].wlan[*].radio.transmitter.frequencyGains = "left c-b*1.5 -40dB linear c-b -28dB linear c-b*0.5-1MHz -20dB linear c-b*0.5+1MHz 0dB linear c+b*0.5-1MHz 0dB linear c+b*0.5+1MHz -20dB linear c+b -28dB linear c+b*1.5 -40dB right"
*.ap*[*].wlan[*].radio.transmitter.frequencyGains = "left c-b*1.5 -40dB linear c-b -28dB linear c-b*0.5-1MHz -20dB linear c-b*0.5+1MHz 0dB linear c+b*0.5-1MHz 0dB linear c+b*0.5+1MHz -20dB linear c+b -28dB linear c+b*1.5 -40dB right"
*.dummySink.wlan[*].radio.transmitter.frequencyGains = "left c-b*1.5 -40dB linear c-b -28dB linear c-b*0.5-1MHz -20dB linear c-b*0.5+1MHz 0dB linear c+b*0.5-1MHz 0dB linear c+b*0.5+1MHz -20dB linear c+b -28dB linear c+b*1.5 -40dB right"

# set freq. gains for IEEE 802.15.4e modules
**.wlan[*].radio.transmitter.frequencyGains = "left c-5MHz -40dB linear c-2MHz -20dB linear c-1MHz 0dB either c+1MHz 0dB linear c+2MHz -20dB linear c+5MHz -40dB right" 
#**.wlan[*].radio.transmitter.frequencyGains = "left s 0dB either e 0dB right"
#**.wlan[*].radio.transmitter.frequencyGains =  "left c-3.5MHz 0dB linear c+3.5MHz 0dB right"

########################################################################################################################################################################
#################################################################		TCP/WLAN SETTINGS		########################################################################
########################################################################################################################################################################

# Some tcp settings
**.tcp.typename = "Tcp"
**.tcp.tcpAlgorithmClass = "TcpNewReno"
**.tcp.windowScalingSupport = true
**.dataTransferMode = "object"
**.tcp.mss = 1460                 # MTU-TCPheader-IPheader=1500-20-20=1460
**.tcp.advertisedWindow = 1460000 # do not use this.mss - directly give a number

**.opMode = "b"#"n(mixed-2.4Ghz)" #"g(mixed)"
*.user*[*].wlan[*].radio.antenna.numAntennas = 1#2
*.ap*[*].wlan[*].radio.antenna.numAntennas = 1#2
*.user*[*].wlan[*].bitrate = 2Mbps#144.4Mbps
*.ap*[*].wlan[*].bitrate = 2Mbps
*.user*[*].**.address = "auto"
*.ap*[*].**.address = "auto"

#**.maxQueueSize = 14
**.wlan[*].mac.dcf.rtsPolicy.rtsThreshold = 3000B
**.wlan[*].mac.cwMinData = 7
**.wlan[*].mac.cwMinMulticast = 31

**.mgmt.frameCapacity = 50

# analog model
**.analogModel.ignorePartialInterference = false

# access point configuration
#**.idleInterval = 1s
*.ap1[*].wlan[0].mgmt.beaconInterval = 10s
*.ap1[0].wlan[0].mgmt.ssid = "alpha1"
*.ap1[1].wlan[0].mgmt.ssid = "beta1"
*.ap1[2].wlan[0].mgmt.ssid = "gamma1"

*.user1[0..32].wlan[0].agent.defaultSsid = "alpha1"
*.user1[99..131].wlan[0].agent.defaultSsid = "alpha1"
*.user1[33..65].wlan[0].agent.defaultSsid = "beta1"
*.user1[132..164].wlan[0].agent.defaultSsid = "beta1"
*.user1[66..98].wlan[0].agent.defaultSsid = "gamma1"
*.user1[165..198].wlan[0].agent.defaultSsid = "gamma1"

*.ap2[*].wlan[0].mgmt.beaconInterval = 10s
*.ap2[0].wlan[0].mgmt.ssid = "alpha2"
*.ap2[1].wlan[0].mgmt.ssid = "beta2"
*.ap2[2].wlan[0].mgmt.ssid = "gamma2"

*.user2[0..32].wlan[0].agent.defaultSsid = "alpha2"
*.user2[99..131].wlan[0].agent.defaultSsid = "alpha2"
*.user2[33..65].wlan[0].agent.defaultSsid = "beta2"
*.user2[132..164].wlan[0].agent.defaultSsid = "beta2"
*.user2[66..98].wlan[0].agent.defaultSsid = "gamma2"
*.user2[165..198].wlan[0].agent.defaultSsid = "gamma2"

*.ap3[*].wlan[0].mgmt.beaconInterval = 10s
*.ap3[0].wlan[0].mgmt.ssid = "alpha3"
*.ap3[1].wlan[0].mgmt.ssid = "beta3"
*.ap3[2].wlan[0].mgmt.ssid = "gamma3"

*.user3[0..32].wlan[0].agent.defaultSsid = "alpha3"
*.user3[99..131].wlan[0].agent.defaultSsid = "alpha3"
*.user3[33..65].wlan[0].agent.defaultSsid = "beta3"
*.user3[132..164].wlan[0].agent.defaultSsid = "beta3"
*.user3[66..98].wlan[0].agent.defaultSsid = "gamma3"
*.user3[165..198].wlan[0].agent.defaultSsid = "gamma3"

*.ap4[*].wlan[0].mgmt.beaconInterval = 10s
*.ap4[0].wlan[0].mgmt.ssid = "alpha4"
*.ap4[1].wlan[0].mgmt.ssid = "beta4"
*.ap4[2].wlan[0].mgmt.ssid = "gamma4"

*.user4[0..32].wlan[0].agent.defaultSsid = "alpha4"
*.user4[99..131].wlan[0].agent.defaultSsid = "alpha4"
*.user4[33..65].wlan[0].agent.defaultSsid = "beta4"
*.user4[132..164].wlan[0].agent.defaultSsid = "beta4"
*.user4[66..98].wlan[0].agent.defaultSsid = "gamma4"
*.user4[165..198].wlan[0].agent.defaultSsid = "gamma4"

########################################################################################################################################################################
############################################################## 		TCP APPLICATION SETTINGS		####################################################################
########################################################################################################################################################################

########## HTTP application ########## 
## server
#*.server*.numApps = 1			
#*.server*.app[0].typename = "TcpGenericServerApp"
#*.server1.app[0].localPort = 80
#*.server1.app[0].replyDelay = 0
#
## clients
#*.user*[*].numApps = 1
#*.user*[*].app[0].typename = "TschTcpReSaBasicClientApp"
#*.user*[*].app[0].localPort = -1
#*.user*[*].app[0].connectAddress = "server1"
#*.user*[*].app[0].numRequestsPerSession = int(exponential(5))
#*.user*[*].app[0].thinkTime = 1s #time gap between requests
#*.user*[*].app[0].idleInterval = 1s*exponential(60) #time gap between sessions
#*.user*[*].app[0].replyLength = 1B*int(exponential(2000))
#*.user*[*].app[0].requestLength = 1B*int(truncnormal(350,20))
#*.user1[*].app[0].connectPort = 80
#
#*.user*[*].app[0].startTime = ${warmup}s + 1s*exponential(60)

########## Video stream application ########## 
# server
*.server*.numApps = 2		
*.server*.app[0].typename = "TcpGenericServerApp"
*.server*.app[0].localPort = 80
*.server*.app[0].replyDelay = 0

*.server*.app[1].typename = "UdpVideoStreamServer"
*.server*.app[1].videoSize = 20MiB#105MiB # 1minute HD video = 105MiB
*.server*.app[1].localPort = 3088
*.server*.app[1].sendInterval = 100ms
*.server*.app[1].packetLen = 1000B

# clients
*.user*[*].numApps = 2
*.user*[*].app[0].typename = "UdpVideoStreamClient"
*.user1[*].app[0].serverAddress = "server1"
*.user2[*].app[0].serverAddress = "server2"
*.user3[*].app[0].serverAddress = "server3"
*.user4[*].app[0].serverAddress = "server4"
*.user*[*].app[0].localPort = 9999
*.user*[*].app[0].serverPort = 3088
*.user*[*].app[0].startTime = ${warmup}s + uniform(0s,0.1s)

*.user*[*].app[1].typename = "TschTcpReSaBasicClientApp"#"TcpBasicClientApp"
*.user*[*].app[1].localPort = -1
*.user*[*].app[1].connectAddress = "server1"
*.user*[*].app[1].numRequestsPerSession = int(exponential(5))
*.user*[*].app[1].thinkTime = 1s #time gap between requests
*.user*[*].app[1].idleInterval = 1s*exponential(60) #time gap between sessions
*.user*[*].app[1].replyLength = 1B*int(exponential(2000))
*.user*[*].app[1].requestLength = 1B*int(truncnormal(350,20))
*.user*[*].app[1].connectPort = 80
*.user*[*].app[1].startTime = ${simtime}s





########## Interference verification/test scenario ########## 
#*.dummySink.mobility.typename = "StationaryMobility"
#*.dummySink.mobility.constraintAreaMaxX = 1000m
#*.dummySink.mobility.constraintAreaMaxY = 1000m
#*.dummySink.mobility.constraintAreaMaxZ = 5m
#
#*.dummySink.mobility.initialX = ${x1offset} + 16.75m
#*.dummySink.mobility.initialY = ${y1offset} - 1m
#*.dummySink.mobility.initialZ = 3.82m 
#
#*.user*[*].mobility.initialX = ${x1offset} + 8m
#*.user*[*].mobility.initialY = ${y1offset} - 1m
#*.user*[*].mobility.initialZ = 3.82m 
#
#*.dummySink.numApps = 1			
#*.dummySink.app[0].typename = "UdpSink"
#*.dummySink.app[0].localPort = 80
#*.dummySink.app[*].startTime = 1s
#
#*.dummySink.wlan[*].typename = "Ieee80211Interface"
#*.dummySink.wlan[*].mac.typename = "Ieee80211Mac"
#*.dummySink.wlan[*].radio.typename = "Ieee80211DimensionalRadio"
#*.dummySink.wlan[*].radio.channelNumber = 0
#*.user*[*].wlan[*].radio.channelNumber = 0
#
#*.user*[*].numApps = 1
#*.user*[*].app[0].typename = "UdpBasicApp"
#*.user*[*].app[0].destPort = 80
#*.user*[*].app[0].destAddresses = "dummySink"
#*.user*[*].app[0].packetName = "USER_App"
#*.user*[*].app[0].messageLength = 340B
#*.user*[*].app[0].sendInterval = 1s
#*.user*[*].app[0].receiveBroadcast = true

########################################################################################################################################################################
###################################################################		RECORDING SETTINGS		########################################################################
########################################################################################################################################################################

*.user*[*].**.vector-recording = false
*.user*[*].**.scalar-recording = false
*.ap*[*].**.vector-recording = false
*.ap*[*].**.scalar-recording = false
*.server*.**.vector-recording = false
*.server*.**.scalar-recording = false